---
stages:
 - source
 - source-package
 - binary-package
 - robots
 - build-repository
 - sync

################################################
# Stage "source": build source, run test suite #
################################################
build:source:
  variables:
    GIT_STRATEGY: clone
  stage: source
  tags:
    - docker
  image: debian:testing
  before_script:
    - if [ ! -z "$ACNG" ]; then sed -i -e "s,http://,$ACNG/," /etc/apt/sources.list; else echo "no proxy configured"; fi
    - apt-get update
    - apt-get -y install --no-install-recommends autoconf automake libtool libpcsclite-dev libp11-kit-dev libgtk-3-dev libassuan-dev libgpg-error-dev libssl-dev libxml2-dev libcurl4-openssl-dev libproxy-dev plantuml zip gettext build-essential g++ git graphviz
  script:
    - autoreconf -f -i
    - ./configure
    - make -j $(nproc) distcheck
  after_script:
    - mkdir -p products/source
    - cp eid-mw-*.tar.gz eid-mw-*.zip products/source/
  artifacts:
    when:
      on_success
    paths:
      - products/source
#################################################
# Stage "source-package": build source packages #
#################################################
build:srpm:
  stage: source-package
  tags:
    - docker
  image: fedora:latest
  before_script:
    - http_proxy=$ACNG dnf -y install rpm-build git rpmdevtools
    - rpmdev-setuptree
    - VER=$(scripts/build-aux/genver.sh)
    - VERSHORT=$(git describe --dirty | sed -e 's/-/./g')
    - mv products/source/eid-mw-$VER.tar.gz $HOME/rpmbuild/SOURCES/
    - tar --extract --file=$HOME/rpmbuild/SOURCES/eid-mw-$VER.tar.gz -C $HOME/rpmbuild/SPECS/ --strip-components=2 eid-mw-$VER/rpm/eid-mw.spec
    - tar --extract --file=$HOME/rpmbuild/SOURCES/eid-mw-$VER.tar.gz -C $HOME/rpmbuild/SOURCES/ --strip-components=2 eid-mw-$VER/rpm/baselibs.conf
  script:
    - rpmbuild --define "revision $VERSHORT" -bs $HOME/rpmbuild/SPECS/eid-mw.spec
  after_script:
    - mkdir -p products/srpm/
    - cp $HOME/rpmbuild/SRPMS/eid-mw-*.src.rpm products/srpm/
  artifacts:
    paths:
      - products/srpm
##############################################################
# Stage "binary-package": build binaries and binary packages #
##############################################################

## Debian-based distributions
.build-deb-base: &build-deb-base
  dependencies:
    - build:source
  before_script:
    - mkdir build
    - cd build && tar xvf ../products/source/eid-mw-*.tar.gz --strip-components=1
    - ../scripts/build-aux/deb-cl.pl debian/changelog
  stage: binary-package
  script:
    - TARGET=continuous
    - if [ $CANDIDATEBRANCH = $CI_COMMIT_REF_NAME ]; then TARGET=candidate; fi
    - if [ ! -z "$CI_COMMIT_TAG" ]; then TARGET=candidate; fi
    - if [ $ARCH = "i386" ]; then DASHA="-A -s"; else DASHA=""; fi
    - sbuild -n $DASHA -d $TARGET-$CODE -c $CODE-$ARCH-sbuild --arch=$ARCH
  after_script:
    - mkdir -p products/deb/
    - dcmd mv *ges products/deb/
  image: tianon/sbuild
  artifacts:
    paths:
      - products/deb
    when:
      on_success
  tags:
    - sbuild
.build-deb: &build-deb
  <<: *build-deb-base
  except:
    variables:
    - $EXTRADIST
build:deb8-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: jessie
    SHORT: deb8
    ARCH: i386
build:deb8-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: jessie
    SHORT: deb8
    ARCH: amd64
build:deb9-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: stretch
    SHORT: deb9
    ARCH: i386
build:deb9-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: stretch
    SHORT: deb9
    ARCH: amd64
build:deb10-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: buster
    SHORT: deb10
    ARCH: i386
  allow_failure: true
build:deb10-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: buster
    SHORT: deb10
    ARCH: amd64
  allow_failure: true
build:sid-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: sid
    SHORT: sid
    ARCH: i386
  allow_failure: true
build:sid-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: sid
    SHORT: sid
    ARCH: amd64
  allow_failure: true
build:xenial-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: xenial
    SHORT: u1604
    ARCH: i386
build:xenial-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: xenial
    SHORT: u1604
    ARCH: amd64
build:bionic-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: bionic
    SHORT: u1804
    ARCH: i386
build:bionic-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: bionic
    SHORT: u1804
    ARCH: amd64
build:disco-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: disco
    SHORT: u1904
    ARCH: i386
build:disco-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: disco
    SHORT: u1904
    ARCH: amd64
extra:deb-32:
  <<: *build-deb-base
  variables:
    DIST: $EXTRADIST
    CODE: $EXTRACODE
    SHORT: $EXTRASHORT
    ARCH: i386
  when: manual
extra:deb-64:
  <<: *build-deb-base
  variables:
    DIST: $EXTRADIST
    CODE: $EXTRACODE
    SHORT: $EXTRASHORT
    ARCH: amd64
  when: manual
# Fedora-based distributions
.build-fed-base: &build-fed-base
  dependencies:
    - build:srpm
  stage: binary-package
  retry: 2
  tags:
    - docker
  image: fedora:latest
  before_script:
    - if [ ! -z "$ACNG" ]; then sed -i -e '/metalink/d;s/^#baseurl/baseurl/' /etc/yum.repos.d/*.repo; fi
    - http_proxy="$ACNG" dnf -y install mock git
    - if [ ! -z "$ACNG" ]; then for i in $(grep mirrorlist /etc/mock/$DIST-$DVER-$ARCH.cfg | cut -d'=' -f2-); do sed -i -e "s,mirrorlist=$i,baseurl=$(curl $i|grep http://|while read a; do echo -n $a' '; done; echo ',')" /etc/mock/$DIST-$DVER-$ARCH.cfg; done; fi
    - VERSHORT=$(git describe --dirty | sed -e 's/-/./g')
  script:
    - http_proxy="$ACNG" mock --old-chroot --verbose -r $DIST-$DVER-$ARCH --rebuild products/srpm/eid-mw-*.src.rpm --define "revision $VERSHORT"
  after_script:
    - mkdir -p products/$DIST-$DVER-$ARCH
    - cp /var/lib/mock/$DIST-$DVER-$ARCH/result/eid*rpm products/$DIST-$DVER-$ARCH/
  artifacts:
    paths:
      - products/$DIST-$DVER-$ARCH
    when:
      on_success
.build-fed: &build-fed
  <<: *build-fed-base
  except:
    variables:
    - $EXTRADIST
build:fedora-29-32:
  <<: *build-fed
  variables:
    DIST: fedora
    DVER: 29
    ARCH: i386
build:fedora-30-32:
  <<: *build-fed
  variables:
    DIST: fedora
    DVER: 30
    ARCH: i386
build:centos-6-32:
  <<: *build-fed
  variables:
    DIST: epel
    DVER: 6
    ARCH: i386
build:fedora-29-64:
  <<: *build-fed
  variables:
    DIST: fedora
    DVER: 29
    ARCH: x86_64
build:fedora-30-64:
  <<: *build-fed
  variables:
    DIST: fedora
    DVER: 30
    ARCH: x86_64
build:centos-6-64:
  <<: *build-fed
  variables:
    DIST: epel
    DVER: 6
    ARCH: x86_64
build:centos-7-64:
  <<: *build-fed
  variables:
    DIST: epel
    DVER: 7
    ARCH: x86_64
extra:fed-32:
  <<: *build-fed-base
  variables:
    DIST: $EXTRADIST
    DVER: $EXTRAVER
    ARCH: i386
  when: manual
extra:fed-64:
  <<: *build-fed-base
  variables:
    DIST: $EXTRADIST
    DVER: $EXTRAVER
    ARCH: x86_64
  when: manual
# openSUSE-based distributions
.build-suse-base: &build-suse-base
  dependencies:
    - build:srpm
  stage: binary-package
  retry: 2
  tags:
    - docker
  image: wouterverhelst/obs-build:latest
  before_script:
    - VERSHORT=$(git describe --dirty | sed -e 's/-/./g')
  script:
    - http_proxy="$ACNG" build --no-checks --clean -debug --dist sl$DVER --repo $REPOURL --define "revision $VERSHORT" products/srpm/eid-mw-*.src.rpm
  after_script:
    - mkdir -p products/$DIST-$DVER-$ARCH
    - mv /var/tmp/build-root/home/abuild/rpmbuild/RPMS/*/*rpm products/$DIST-$DVER-$ARCH/
  artifacts:
    paths:
      - products/$DIST-$DVER-$ARCH
    when:
      on_success
.build-suse: &build-suse
  <<: *build-suse-base
  except:
    variables:
    - $EXTRADIST
build:suse-15.0:
  <<: *build-suse
  variables:
    DIST: opensuse
    DVER: "15.0"
    REPOURL: http://download.opensuse.org/distribution/leap/15.0/repo/oss
    ARCH: x86_64
build:suse-15.1:
  <<: *build-suse-base
  variables:
    DIST: opensuse
    DVER: "15.1"
    REPOURL: http://download.opensuse.org/distribution/leap/15.1/repo/oss
    ARCH: x86_64
extra:suse-32:
  <<: *build-suse-base
  variables:
    DIST: $EXTRADIST
    DVER: $EXTRAVER
    REPOURL: $EXTRAURL
    ARCH: x86_64
  when: manual
extra:suse-64:
  <<: *build-suse-base
  variables:
    DIST: $EXTRADIST
    DVER: $EXTRAVER
    REPOURL: $EXTRAURL
    ARCH: x86_64
  when: manual
build:windows:
  stage: binary-package
  variables:
  dependencies:
  script:
  - cd scripts\windows
  - build_all.bat
  tags:
  - windows
  allow_failure: true
robot:windows:
  stage: robots
  dependencies:
  - build:windows
  before_script:
  - cd scripts\windows
  - build_testsuite.bat
  script:
  - cd tests\unit\windows\Release
  - pkcs11_tests.exe
####################################################################
# Stage "build-repository": copy binaries into a repository layout #
####################################################################
inject-debs:
  dependencies:
    - build:deb8-32
    - build:deb9-32
    - build:deb10-32
    - build:sid-32
    - build:xenial-32
    - build:bionic-32
    - build:disco-32
    - build:deb8-64
    - build:deb9-64
    - build:deb10-64
    - build:sid-64
    - build:xenial-64
    - build:bionic-64
    - build:disco-64
  stage: build-repository
  tags:
    - repobuilder
  before_script:
    - dcmd mv products/deb/*ges /srv/repo/reprepro/incoming
  script:
    - cd /srv/repo/reprepro && reprepro processincoming incoming
  variables:
    GIT_STRATEGY: none
  only:
    variables:
    - $CI_COMMIT_REF_NAME == "master"
    - $CI_COMMIT_REF_NAME == $CANDIDATEBRANCH
    - $CI_COMMIT_TAG
  except:
    variables:
    - $EXTRADIST
add:debs:
  when: manual
  dependencies:
  - extra:deb-32
  - extra:deb-64
  stage: build-repository
  tags:
  - repobuilder
  before_script:
  - dcmd mv products/deb/*ges /srv/repo/reprepro/incoming
  script:
  - cd /srv/repo/reprepro && reprepro processincoming incoming
  variables:
    GIT_STRATEGY: none
inject-fed:
  only:
    variables:
    - $CI_COMMIT_REF_NAME == "master"
    - $CI_COMMIT_REF_NAME == $CANDIDATEBRANCH
    - $CI_COMMIT_TAG
  except:
    variables:
    - $EXTRADIST
  dependencies:
    - build:fedora-29-32
    - build:fedora-29-64
    - build:fedora-30-32
    - build:fedora-30-64
    - build:centos-6-32
    - build:centos-6-64
    - build:centos-7-64
  stage: build-repository
  tags:
    - repobuilder
  script:
    - export TARGET=continuous
    - if [ $CANDIDATEBRANCH = $CI_COMMIT_REF_NAME ]; then TARGET=candidate; fi
    - if [ ! -z "$CI_COMMIT_TAG" ]; then TARGET=candidate; fi
    - bash -x scripts/build-aux/fed-rel.sh
add:fedora:
  when: manual
  dependencies:
  - extra:fed-32
  - extra:fed-64
  stage: build-repository
  tags:
  - repobuilder
  script:
  - export TARGET=continuous
  - if [ "$CANDIDATEBRANCH" = "$CI_COMMIT_REF_NAME" ]; then TARGET=candidate; fi
  - if [ ! -z "$CI_COMMIT_TAG" ]; then TARGET=candidate; fi
  - bash -x scripts/build-aux/fed-rel.sh extra
inject-suse:
  only:
    variables:
    - $CI_COMMIT_REF_NAME == "master"
    - $CI_COMMIT_REF_NAME == $CANDIDATEBRANCH
    - $CI_COMMIT_TAG
  except:
    variables:
    - $EXTRADIST
  dependencies:
    - build:suse-15.0
    - build:suse-15.1
  stage: build-repository
  tags:
    - repobuilder
  script:
    - export TARGET=continuous
    - if [ $CANDIDATEBRANCH = $CI_COMMIT_REF_NAME ]; then TARGET=candidate; fi
    - if [ ! -z "$CI_COMMIT_TAG" ]; then TARGET=candidate; fi
    - bash -x scripts/build-aux/suse-rel.sh
add:suse:
  when: manual
  dependencies:
  - extra:suse-64
  stage: build-repository
  tags:
  - repobuilder
  script:
  - export TARGET=continuous
  - if [ "$CANDIDATEBRANCH" = "$CI_COMMIT_REF_NAME" ]; then TARGET=candidate; fi
  - if [ ! -z "$CI_COMMIT_TAG" ]; then TARGET=candidate; fi
  - bash -x scripts/build-aux/suse-rel.sh extra

inject-source:
  dependencies:
  - build:source
  stage: build-repository
  tags:
  - repobuilder
  script:
  - SOURCETGZ=products/source/eid-mw-*.tar.gz
  - SOURCEZIP=products/source/eid-mw-*.zip
  - cp $SOURCETGZ $SOURCEZIP /srv/dist/eid-mw/continuous/sources/
  - cd /srv/dist/eid-mw/continuous/sources
  - gpg --yes --batch --passphrase "" --default-key $GPG_TEST_KEY_ID --no-tty -b --armor $(basename $SOURCETGZ)
