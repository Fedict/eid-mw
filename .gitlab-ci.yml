---
stages:
 - source
 - source-package
 - binary-package
 - build-repository
 - sync
variables:
  TARGET: continuous
build:source:
  variables:
    GIT_STRATEGY: clone
  stage: source
  tags:
    - docker
  image: debian:testing
  before_script:
    - sed -i -e 's,http://,http://192.168.122.1/apt-cacher/,g' /etc/apt/sources.list
    - apt-get update
    - apt-get -y install --no-install-recommends autoconf automake libtool libpcsclite-dev libp11-kit-dev libgtk-3-dev libassuan-dev libgpg-error-dev libssl-dev libxml2-dev libcurl4-openssl-dev libproxy-dev plantuml zip gettext build-essential g++ git graphviz
  script:
    - autoreconf -f -i
    - ./configure
    - make -j $(nproc) distcheck
  artifacts:
    when:
      on_success
    paths:
      - eid-mw-*.tar.gz
      - eid-mw-*.zip
.build-deb: &build-deb
  before_script:
    - mkdir build
    - cd build && tar xvf ../eid-mw-*.tar.gz --strip-components=1
    - ../scripts/build-aux/deb-cl.pl debian/changelog
  stage: binary-package
  script:
    - if [ $ARCH = "i386" ]; then DASHA="-A -s"; else DASHA=""; fi
    - sbuild -n $DASHA -d $TARGET-$CODE -c $CODE-$ARCH-sbuild --arch=$ARCH
  after_script:
    - mkdir -p output
    - dcmd mv *ges output/
  image: tianon/sbuild
  artifacts:
    paths:
      - output
    when:
      on_success
  tags:
    - sbuild
build:srpm:
  stage: source-package
  tags:
    - docker
  image: fedora:29
  before_script:
    - dnf install rpm-build git
    - rpmdev-setuptree
    - VER=$(scripts/build-aux/genver.sh)
    - VERSHORT=$(git describe --dirty | sed -e 's/-/./g')
    - mv output/eid-mw-$VER.tar.gz $HOME/rpmbuild/SOURCES/
    - tar --extract --file=$HOME/rpmbuild/SOURCES/eid-mw-$VER.tar.gz -C $HOME/rpmbuild/SPECS/ --strip-components=2 eid-mw-$VER/rpm/eid-mw.spec
    - tar --extract --file=$HOME/rpmbuild/SOURCES/eid-mw-$VER.tar.gz -C $HOME/rpmbuild/SOURCES/ --strip-components=2 eid-mw-$VER/rpm/baselibs.conf
  script:
    - rpmbuild --define "revision $VERSHORT" -bs $HOME/rpmbuild/SPECS/eid-mw.spec
  artifacts:
    paths:
      - $HOME/rpmbuild
inject-debs:
  dependencies:
    - build:deb8-32
    - build:deb9-32
    - build:deb10-32
    - build:sid-32
    - build:xenial-32
    - build:bionic-32
    - build:cosmic-32
    - build:disco-32
    - build:deb8-64
    - build:deb9-64
    - build:deb10-64
    - build:sid-64
    - build:xenial-64
    - build:bionic-64
    - build:cosmic-64
    - build:disco-64
  stage: build-repository
  tags:
    - reprepro
  before_script:
    - dcmd mv output/*ges /srv/repo/reprepro/incoming
  script:
    - cd /srv/repo/reprepro && reprepro processincoming incoming
  variables:
    GIT_STRATEGY: none
build:deb8-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: jessie
    SHORT: deb8
    ARCH: i386
build:deb8-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: jessie
    SHORT: deb8
    ARCH: amd64
build:deb9-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: stretch
    SHORT: deb9
    ARCH: i386
build:deb9-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: stretch
    SHORT: deb9
    ARCH: amd64
build:deb10-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: buster
    SHORT: deb10
    ARCH: i386
build:deb10-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: buster
    SHORT: deb10
    ARCH: amd64
build:sid-32:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: sid
    SHORT: sid
    ARCH: i386
build:sid-64:
  <<: *build-deb
  variables:
    DIST: debian
    CODE: sid
    SHORT: sid
    ARCH: amd64
build:xenial-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: xenial
    SHORT: u1604
    ARCH: i386
build:xenial-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: xenial
    SHORT: u1604
    ARCH: amd64
build:bionic-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: bionic
    SHORT: u1804
    ARCH: i386
build:bionic-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: bionic
    SHORT: u1804
    ARCH: amd64
build:cosmic-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: cosmic
    SHORT: u1810
    ARCH: i386
build:cosmic-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: cosmic
    SHORT: u1810
    ARCH: amd64
build:disco-32:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: disco
    SHORT: u1904
    ARCH: i386
build:disco-64:
  <<: *build-deb
  variables:
    DIST: ubuntu
    CODE: disco
    SHORT: u1904
    ARCH: amd64
