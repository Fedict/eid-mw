@startuml
title Backend state machine

' This file documents the state machine as implemented in state.c. It
' can be converted to a diagram by way of PlantUML, see
' http://plantuml.com/

[*] --> LIBOPEN

LIBOPEN --> CALLBACKS : eid_vwr_createcallbacks()

state CALLBACKS {
  state NO_TOKEN
  state TOKEN
  state FILE
  state CARD_INVALID

  [*] --> NO_TOKEN

  NO_TOKEN --> FILE : eid_vwr_be_deserialize()
  FILE --> NO_TOKEN : eid_vwr_close_file()
  FILE --> TOKEN
  FILE --> NO_TOKEN

  TOKEN --> NO_TOKEN
  TOKEN --> CARD_INVALID : eid_vwr_be_set_invalid()

  CARD_INVALID --> NO_TOKEN

  state NO_TOKEN {
    state NO_READER
    state READY

    [*] --> NO_READER
    NO_READER --> READY

    READY --> TOKEN
  }

  state TOKEN {
    state TOKEN_ID
    state TOKEN_CERTS
    state TOKEN_ERROR
    state TOKEN_WAIT
    state TOKEN_PINOP
    state TOKEN_SERIALIZE

    [*] --> TOKEN_ID

    TOKEN_ID --> TOKEN_CERTS
    TOKEN_ID --> TOKEN_ERROR

    TOKEN_CERTS --> TOKEN_WAIT
    TOKEN_CERTS --> TOKEN_ERROR
 
    TOKEN_WAIT --> TOKEN_PINOP : eid_vwr_pinop()
    TOKEN_WAIT --> TOKEN_SERIALIZE : eid_vwr_be_serialize()

    TOKEN_PINOP --> TOKEN_WAIT
    TOKEN_PINOP --> TOKEN_WAIT

    TOKEN_SERIALIZE --> TOKEN_WAIT
    TOKEN_SERIALIZE --> TOKEN_ERROR
  }
}

@enduml
