diff -Nur openssl-0.9.8za/src/crypto/x509/x509_vfy.c ./crypto/x509/x509_vfy.c
--- openssl-0.9.8za/src/crypto/x509/x509_vfy.c	2014-06-05 01:09:08.000000000 -0700
+++ ./crypto/x509/x509_vfy.c	2014-07-09 17:55:16.000000000 -0700
@@ -70,6 +70,13 @@
 #include <openssl/x509v3.h>
 #include <openssl/objects.h>
 
+/*
+ * If we are using Trust Evaluation Agent, rename the original function
+ */
+#ifdef __APPLE__
+#define X509_verify_cert X509_verify_cert_orig
+#endif
+
 static int null_callback(int ok,X509_STORE_CTX *e);
 static int check_issued(X509_STORE_CTX *ctx, X509 *x, X509 *issuer);
 static X509 *find_issuer(X509_STORE_CTX *ctx, STACK_OF(X509) *sk, X509 *x);
diff -Nur openssl-0.9.8za/src/crypto/x509/x509_vfy_apple.c ./crypto/x509/x509_vfy_apple.c
--- openssl-0.9.8za/src/crypto/x509/x509_vfy_apple.c	1969-12-31 16:00:00.000000000 -0800
+++ ./crypto/x509/x509_vfy_apple.c	2014-07-09 17:55:16.000000000 -0700
@@ -0,0 +1,199 @@
+/*
+ * Copyright (c) 2009 Apple Inc. All Rights Reserved.
+ *
+ * @APPLE_LICENSE_HEADER_START@
+ * 
+ * This file contains Original Code and/or Modifications of Original Code
+ * as defined in and that are subject to the Apple Public Source License
+ * Version 2.0 (the 'License'). You may not use this file except in
+ * compliance with the License. Please obtain a copy of the License at
+ * http://www.opensource.apple.com/apsl/ and read it before using this
+ * file.
+ * 
+ * The Original Code and all software distributed under the License are
+ * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
+ * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
+ * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
+ * Please see the License for the specific language governing rights and
+ * limitations under the License.
+ * 
+ * @APPLE_LICENSE_HEADER_END@
+ *
+ */
+
+#include <stdint.h>
+#include <inttypes.h>
+#include <openssl/x509.h>
+#include <openssl/x509v3.h>
+#include <TrustEvaluationAgent/TrustEvaluationAgent.h>
+#include <syslog.h>
+
+#include "cryptlib.h"
+#include "x509_vfy_apple.h"
+
+#define TEA_might_correct_error(err) (err == X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY || err == X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT || err == X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN)
+
+/*
+ * Please see comment in x509_vfy_apple.h
+ */
+int
+X509_verify_cert(X509_STORE_CTX *ctx)
+{
+	TEAResult		ret = kTEAResultCertNotTrusted;
+	TEACertificateChainRef	inputChain = NULL;
+	TEACertificateChainRef	outputChain = NULL;
+	__block uint64_t	certCount = 0;
+	uint64_t		certLastIndex = 0;
+	uint64_t		i = 0;
+	int			error = 0;
+	TEAParams		params = { 0 };
+
+
+	if (ctx == NULL || ctx->cert == NULL)
+        return kTEAResultErrorOccured;
+
+	/* Try OpenSSL, if we get a local certificate issue verify against trusted roots */
+	ret = X509_verify_cert_orig(ctx);
+
+	/* Verify TEA is enabled and should be used. */
+	if (0 != X509_TEA_is_enabled() &&
+		ret != 1 && TEA_might_correct_error(ctx->error)) {
+
+		/* Verify that the certificate chain exists, otherwise make it. */
+		if (ctx->chain == NULL && (ctx->chain = sk_X509_new_null()) == NULL) {
+			TEALogDebug("Could not create the certificate chain");
+			ret = kTEAResultCertNotTrusted;
+			goto bail;
+		}
+
+		/* Verify chain depth */
+		certLastIndex = sk_X509_num(ctx->untrusted);
+		if (certLastIndex > ctx->param->depth) {
+			TEALogInfo("Pruning certificate chain to %" PRIu64, certLastIndex);
+			certLastIndex = ctx->param->depth;
+		}
+
+		inputChain = TEACertificateChainCreate();
+		if (inputChain == NULL) {
+			TEALogDebug("Certificate chain creation failed");
+			goto bail;
+		}
+
+		unsigned char *asn1_cert_data = NULL;
+		int asn1_cert_len = i2d_X509(ctx->cert, &asn1_cert_data);
+		error = TEACertificateChainAddCert(inputChain, asn1_cert_data, asn1_cert_len);
+		// TEACertificateChainAddCert made a copy of the ASN.1 data, so we get to free ours here
+		OPENSSL_free(asn1_cert_data);
+		if (error) {
+			TEALogDebug("An error occured while inserting the certificate into the chain");
+			goto bail;
+		}
+
+		for (i = 0; i < certLastIndex; ++i) {
+			X509	*t = sk_X509_value(ctx->untrusted, i);
+
+			asn1_cert_data = NULL;
+			asn1_cert_len = i2d_X509(t, &asn1_cert_data);
+			error = TEACertificateChainAddCert(inputChain, asn1_cert_data, asn1_cert_len);
+			// TEACertificateChainAddCert made a copy of the ASN.1 data, so we get to free ours here
+			OPENSSL_free(asn1_cert_data);
+			if (error) {
+				TEALogDebug("An error occured while inserting an untrusted certificate into the chain");
+				goto bail;
+			}
+		}
+
+		// We put ASN.1 encoded X509 on the CertificateChain, so we don't call TEACertificateChainSetEncodingHandler
+		
+		params.purpose = ctx->param->purpose;
+		if (ctx->param->flags & X509_V_FLAG_USE_CHECK_TIME)
+			params.time = ctx->param->check_time;
+
+		outputChain = TEAVerifyCert(inputChain, &params);
+
+		TEACertificateChainRelease(inputChain);
+		inputChain = NULL;
+
+		if (outputChain == NULL) {
+			TEALogDebug("TEAVerifyCert() returned NULL.");
+			goto bail;
+		}
+
+		/* Empty the context chain */
+		for (i = 0; i < sk_X509_num(ctx->chain); ++i)
+			sk_X509_pop(ctx->chain);
+
+		error = TEACertificateChainGetCerts(outputChain, ^(const TEACertificateRef cert) {
+			const unsigned char	*ptr = TEACertificateGetData(cert);
+			X509			*c = NULL;
+
+			if (certCount++ > certLastIndex)
+				return 0;
+
+			c = d2i_X509(NULL, &ptr, TEACertificateGetSize(cert));
+			if (c == NULL) {
+				TEALogDebug("Could not parse certificate");
+				return 1;
+			}
+
+			if (!sk_X509_push(ctx->chain, c)) {
+				TEALogDebug("Could not insert certificate into the chain");
+				return 1;
+			}
+
+			return 0;
+		});
+		if (error) {
+			TEALogDebug("An error occured while deserializing the trusted certificate chain");
+			ret = kTEAResultCertNotTrusted;
+			goto bail;
+		}
+
+		TEACertificateChainRelease(outputChain);
+		outputChain = NULL;
+
+		/* Fixup context data */
+		ctx->current_cert   = sk_X509_value(ctx->chain, 0);
+		ctx->current_issuer = sk_X509_value(ctx->chain, sk_X509_num(ctx->chain) - 1);
+		ctx->error_depth = 0;
+		ctx->error = 0;
+		X509_get_pubkey_parameters(NULL, ctx->chain);
+
+		ret = kTEAResultCertTrusted;
+	}
+
+bail:
+	if (inputChain) {
+		TEACertificateChainRelease(inputChain);
+		inputChain = NULL;
+	}
+	if (outputChain) {
+		TEACertificateChainRelease(outputChain);
+		outputChain = NULL;
+	}
+	return ret;
+}
+
+#pragma mark Trust Evaluation Agent
+
+/* -1: not set
+ *  0: set to false
+ *  1: set to true
+ */
+static int tea_enabled = -1;
+
+void
+X509_TEA_set_state(int change)
+{
+	tea_enabled = (change) ? 1 : 0;
+}
+
+int
+X509_TEA_is_enabled()
+{
+	if (tea_enabled < 0)
+		tea_enabled = (NULL == getenv(X509_TEA_ENV_DISABLE));
+
+	return tea_enabled != 0;
+}
diff -Nur openssl-0.9.8za/src/crypto/x509/x509_vfy_apple.h ./crypto/x509/x509_vfy_apple.h
--- openssl-0.9.8za/src/crypto/x509/x509_vfy_apple.h	1969-12-31 16:00:00.000000000 -0800
+++ ./crypto/x509/x509_vfy_apple.h	2014-07-09 17:55:16.000000000 -0700
@@ -0,0 +1,74 @@
+/*
+ * Copyright (c) 2009 Apple Inc. All Rights Reserved.
+ *
+ * @APPLE_LICENSE_HEADER_START@
+ * 
+ * This file contains Original Code and/or Modifications of Original Code
+ * as defined in and that are subject to the Apple Public Source License
+ * Version 2.0 (the 'License'). You may not use this file except in
+ * compliance with the License. Please obtain a copy of the License at
+ * http://www.opensource.apple.com/apsl/ and read it before using this
+ * file.
+ * 
+ * The Original Code and all software distributed under the License are
+ * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
+ * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
+ * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
+ * Please see the License for the specific language governing rights and
+ * limitations under the License.
+ * 
+ * @APPLE_LICENSE_HEADER_END@
+ *
+ */
+
+#ifndef HEADER_X509_H
+#include <openssl/x509.h>
+#endif
+
+#ifndef HEADER_X509_VFY_APPLE_H
+#define HEADER_X509_VFY_APPLE_H
+
+/* Environment variable name to disable TEA. */
+#define X509_TEA_ENV_DISABLE "OPENSSL_X509_TEA_DISABLE"
+
+/*
+ * X509_verify_cert
+ *
+ * Originally located in x509_vfy.c.
+ *
+ * Verify certificate with OpenSSL created X509_verify_cert. If and only if
+ * OpenSSL cannot get certificate issuer locally then OS X security API will
+ * verify the certificate, using Trust Evaluation Agent.
+ *
+ * Return values:
+ * --------------
+ * -1: Null was passed for either ctx or ctx->cert.
+ *  0: Certificate is trusted.
+ *  1: Certificate is not trusted.
+ */
+int X509_verify_cert(X509_STORE_CTX *ctx);
+
+/*
+ * X509_TEA_is_enabled
+ *
+ * Is the Trust Evaluation Agent (TEA) used for certificate verification when
+ * the issuer cannot be verified.
+ *
+ * Returns 0 if TEA is disabled and 1 if TEA is enabled.
+ */
+int X509_TEA_is_enabled();
+
+/*
+ * X509_TEA_set_state
+ *
+ * Enables/disables certificate verification with Trust Evaluation Agent (TEA)
+ * when the issuer cannot be verified.
+ *
+ * Pass 0 to disable TEA and non-zero to enable TEA.
+ */
+void X509_TEA_set_state(int change);
+
+int X509_verify_cert_orig(X509_STORE_CTX *ctx);
+
+#endif /* HEADER_X509_VFY_APPLE_H */
Binary files openssl-1.0.1j/.DS_Store and src/.DS_Store differ
diff -Nur openssl-1.0.1j/Configure src/Configure
--- openssl-1.0.1j/Configure	2014-10-15 14:53:39.000000000 +0200
+++ src/Configure	2014-11-09 01:44:56.000000000 +0100
@@ -1808,7 +1808,7 @@
 		}
 	elsif	(/^#define\s+ENGINESDIR/)
 		{
-		my $foo = "$prefix/$libdir/engines";
+		my $foo = "$prefix/lib/openssl/engines";
 		$foo =~ s/\\/\\\\/g;
 		print OUT "#define ENGINESDIR \"$foo\"\n";
 		}
@@ -1948,11 +1948,16 @@
 # create the ms/version32.rc file if needed
 if ($IsMK1MF && ($target !~ /^netware/)) {
 	my ($v1, $v2, $v3, $v4);
-	if ($version_num =~ /(^[0-9a-f]{1})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/i) {
-		$v1=hex $1;
-		$v2=hex $2;
-		$v3=hex $3;
-		$v4=hex $4;
+	if (defined($ENV{"RC_ProjectSourceVersion"}) && defined($ENV{"RC_ProjectBuildVersion"})) {
+		# <rdar://problem/6351135> Bump version number for libeay32.dll
+		my @srcVer = split(/\./, $ENV{"RC_ProjectSourceVersion"});
+		$v1 = $srcVer[0] + 0;
+		$v2 = $srcVer[1] + 0;
+		$v3 = $srcVer[2] + 0;
+		$v4 = $ENV{"RC_ProjectBuildVersion"} + 0;
+	} else {
+		# force version to 0 if this isn't a B&I build
+		$v1 = $v2 = $v3 = $v4 = 0;
 	}
 	open (OUT,">ms/version32.rc") || die "Can't open ms/version32.rc";
 	print OUT <<EOF;
@@ -1992,7 +1997,7 @@
 	    VALUE "ProductVersion", "$version\\0"
 	    // Optional:
 	    //VALUE "Comments", "\\0"
-	    VALUE "LegalCopyright", "Copyright � 1998-2005 The OpenSSL Project. Copyright � 1995-1998 Eric A. Young, Tim J. Hudson. All rights reserved.\\0"
+	    VALUE "LegalCopyright", "Copyright � 1998-2005 The OpenSSL Project. Copyright � 1995-1998 Eric A. Young, Tim J. Hudson. All rights reserved.\\0"
 	    //VALUE "LegalTrademarks", "\\0"
 	    //VALUE "PrivateBuild", "\\0"
 	    //VALUE "SpecialBuild", "\\0"
diff -Nur openssl-1.0.1j/MacOS/buildinf.h src/MacOS/buildinf.h
--- openssl-1.0.1j/MacOS/buildinf.h	2014-08-07 00:12:03.000000000 +0200
+++ src/MacOS/buildinf.h	2014-11-09 01:42:24.000000000 +0100
@@ -1,5 +1,13 @@
 #ifndef MK1MF_BUILD
-#  define CFLAGS	"-DB_ENDIAN"
-#  define PLATFORM	"macos"
-#  define DATE		"Sun Feb 27 19:44:16 MET 2000"
+#  define DATE      __DATE__
+# if   defined(__i386) || defined(__i386__) 
+#  define CFLAGS    "-arch i386 -fmessage-length=0 -pipe -Wno-trigraphs -fpascal-strings -fasm-blocks -O3 -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DL_ENDIAN -DOPENSSL_NO_IDEA -DOPENSSL_PIC -DOPENSSL_THREADS -DZLIB -mmacosx-version-min=10.6"
+#  define PLATFORM  "darwin-i386-llvm"
+# elif defined(__x86_64) || defined(__x86_64__)
+#  define CFLAGS    "-arch x86_64 -fmessage-length=0 -pipe -Wno-trigraphs -fpascal-strings -fasm-blocks -O3 -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DL_ENDIAN -DMD32_REG_T=int -DOPENSSL_NO_IDEA -DOPENSSL_PIC -DOPENSSL_THREADS -DZLIB -mmacosx-version-min=10.6"
+#  define PLATFORM  "darwin64-x86_64-llvm"
+# elif defined(__powerpc) || defined(__ppc__)
+#  define CFLAGS    "-arch ppc -fmessage-length=0 -pipe -Wno-trigraphs -fpascal-strings -fasm-blocks -O3 -D_REENTRANT -DB_ENDIAN -DDSO_DLFCN -DHAVE_DLFCN_H -DOPENSSL_NO_IDEA -DOPENSSL_PIC -DOPENSSL_THREADS -DZLIB -mtune=G4 -mmacosx-version-min=10.6"
+#  define PLATFORM  "darwin-ppc-llvm"
+# endif
 #endif
diff -Nur openssl-1.0.1j/crypto/dso/dso_dlfcn.c src/crypto/dso/dso_dlfcn.c
--- openssl-1.0.1j/crypto/dso/dso_dlfcn.c	2014-10-15 14:53:39.000000000 +0200
+++ src/crypto/dso/dso_dlfcn.c	2014-11-09 01:41:14.000000000 +0100
@@ -378,11 +378,21 @@
 	transform = (strstr(filename, "/") == NULL);
 	if(transform)
 		{
+#if __APPLE__
+		/* <rdar://problem/6090756> 098 Should load versioned libraries */
+
+		/* We will convert this to "%s.1.so" or "lib%s.1.so" */
+		rsize += 5;	/* The length of ".1.so" */
+		if ((DSO_flags(dso) & DSO_FLAG_NAME_TRANSLATION_EXT_ONLY) == 0)
+			rsize += DSO_extlen; /* The length of "lib" */
+		}
+#else
 		/* We will convert this to "%s.so" or "lib%s.so" etc */
 		rsize += DSO_extlen;	/* The length of ".so" */
 		if ((DSO_flags(dso) & DSO_FLAG_NAME_TRANSLATION_EXT_ONLY) == 0)
 			rsize += 3; /* The length of "lib" */
 		}
+#endif
 	translated = OPENSSL_malloc(rsize);
 	if(translated == NULL)
 		{
@@ -392,11 +402,20 @@
 		}
 	if(transform)
 		{
+#if __APPLE__
+		/* <rdar://problem/6090756> 098 Should load versioned libraries */
+		if ((DSO_flags(dso) & DSO_FLAG_NAME_TRANSLATION_EXT_ONLY) == 0)
+			snprintf(translated, rsize, "lib%s.1.so", filename);
+		else
+			snprintf(translated, rsize, "%s.1.so", filename);
+		}
+#else
 		if ((DSO_flags(dso) & DSO_FLAG_NAME_TRANSLATION_EXT_ONLY) == 0)
 			sprintf(translated, "lib%s" DSO_ext, filename);
 		else
 			sprintf(translated, "%s" DSO_ext, filename);
 		}
+#endif
 	else
 		sprintf(translated, "%s", filename);
 	return(translated);
diff -Nur openssl-1.0.1j/crypto/err/err.c src/crypto/err/err.c
--- openssl-1.0.1j/crypto/err/err.c	2014-10-15 14:53:39.000000000 +0200
+++ src/crypto/err/err.c	2014-11-09 01:38:54.000000000 +0100
@@ -126,8 +126,13 @@
 
 static void ERR_STATE_free(ERR_STATE *s);
 #ifndef OPENSSL_NO_ERR
-static ERR_STRING_DATA ERR_str_libraries[]=
-	{
+#if __APPLE__
+#define CONST_DATA const // we want to mark these items const on OSX
+#else
+#define CONST_DATA       // but not on Windows
+#endif
+CONST_DATA static ERR_STRING_DATA ERR_str_libraries[]=
+{
 {ERR_PACK(ERR_LIB_NONE,0,0)		,"unknown library"},
 {ERR_PACK(ERR_LIB_SYS,0,0)		,"system library"},
 {ERR_PACK(ERR_LIB_BN,0,0)		,"bignum routines"},
@@ -157,10 +162,10 @@
 {ERR_PACK(ERR_LIB_CMS,0,0)		,"CMS routines"},
 {ERR_PACK(ERR_LIB_HMAC,0,0)		,"HMAC routines"},
 {0,NULL},
-	};
+};
 
-static ERR_STRING_DATA ERR_str_functs[]=
-	{
+CONST_DATA static ERR_STRING_DATA ERR_str_functs[]=
+{
 	{ERR_PACK(0,SYS_F_FOPEN,0),     	"fopen"},
 	{ERR_PACK(0,SYS_F_CONNECT,0),		"connect"},
 	{ERR_PACK(0,SYS_F_GETSERVBYNAME,0),	"getservbyname"},
@@ -175,10 +180,10 @@
 	{ERR_PACK(0,SYS_F_OPENDIR,0),		"opendir"},
 	{ERR_PACK(0,SYS_F_FREAD,0),		"fread"},
 	{0,NULL},
-	};
+};
 
-static ERR_STRING_DATA ERR_str_reasons[]=
-	{
+CONST_DATA static ERR_STRING_DATA ERR_str_reasons[]=
+{
 {ERR_R_SYS_LIB				,"system lib"},
 {ERR_R_BN_LIB				,"BN lib"},
 {ERR_R_RSA_LIB				,"RSA lib"},
@@ -219,13 +224,14 @@
 {ERR_R_DISABLED				,"called a function that was disabled at compile-time"},
 
 {0,NULL},
-	};
+};
 #endif
 
 
+
 /* Define the predeclared (but externally opaque) "ERR_FNS" type */
 struct st_ERR_FNS
-	{
+{
 	/* Works on the "error_hash" string table */
 	LHASH_OF(ERR_STRING_DATA) *(*cb_err_get)(int create);
 	void (*cb_err_del)(void);
@@ -240,7 +246,7 @@
 	void (*cb_thread_del_item)(const ERR_STATE *);
 	/* Returns the next available error "library" numbers */
 	int (*cb_get_next_lib)(void);
-	};
+};
 
 /* Predeclarations of the "err_defaults" functions */
 static LHASH_OF(ERR_STRING_DATA) *int_err_get(int create);
diff -Nur openssl-1.0.1j/crypto/objects/obj_dat.h src/crypto/objects/obj_dat.h
--- openssl-1.0.1j/crypto/objects/obj_dat.h	2014-10-15 14:54:33.000000000 +0200
+++ src/crypto/objects/obj_dat.h	2014-11-09 01:40:35.000000000 +0100
@@ -921,7 +921,7 @@
 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x07,/* [5964] OBJ_rsaesOaep */
 };
 
-static const ASN1_OBJECT nid_objs[NUM_NID]={
+const static ASN1_OBJECT nid_objs[NUM_NID]={
 {"UNDEF","undefined",NID_undef,0,NULL,0},
 {"rsadsi","RSA Data Security, Inc.",NID_rsadsi,6,&(lvalues[0]),0},
 {"pkcs","RSA Data Security, Inc. PKCS",NID_pkcs,7,&(lvalues[6]),0},
@@ -3317,7 +3317,7 @@
 160,	/* "x509Crl" */
 };
 
-static const unsigned int ln_objs[NUM_LN]={
+const static unsigned int ln_objs[NUM_LN]={
 363,	/* "AD Time Stamping" */
 405,	/* "ANSI X9.62" */
 368,	/* "Acceptable OCSP Responses" */
@@ -4233,7 +4233,7 @@
 125,	/* "zlib compression" */
 };
 
-static const unsigned int obj_objs[NUM_OBJ]={
+const static unsigned int obj_objs[NUM_OBJ]={
  0,	/* OBJ_undef                        0 */
 181,	/* OBJ_iso                          1 */
 393,	/* OBJ_joint_iso_ccitt              OBJ_joint_iso_itu_t */
diff -Nur openssl-1.0.1j/crypto/pkcs12/p12_crt.c src/crypto/pkcs12/p12_crt.c
--- openssl-1.0.1j/crypto/pkcs12/p12_crt.c	2014-10-15 14:53:39.000000000 +0200
+++ src/crypto/pkcs12/p12_crt.c	2014-11-09 01:41:23.000000000 +0100
@@ -87,6 +87,7 @@
 	int i;
 	unsigned char keyid[EVP_MAX_MD_SIZE];
 	unsigned int keyidlen = 0;
+	unsigned int namelen = name ? strlen(name) : -1;
 
 	/* Set defaults */
 	if (!nid_cert)
@@ -125,7 +126,7 @@
 	if (cert)
 		{
 		bag = PKCS12_add_cert(&bags, cert);
-		if(name && !PKCS12_add_friendlyname(bag, name, -1))
+		if(name && !PKCS12_add_friendlyname(bag, name, namelen))
 			goto err;
 		if(keyidlen && !PKCS12_add_localkeyid(bag, keyid, keyidlen))
 			goto err;
@@ -156,7 +157,7 @@
 		if (!copy_bag_attr(bag, pkey, NID_LocalKeySet))
 			goto err;
 
-		if(name && !PKCS12_add_friendlyname(bag, name, -1))
+		if(name && !PKCS12_add_friendlyname(bag, name, namelen))
 			goto err;
 		if(keyidlen && !PKCS12_add_localkeyid(bag, keyid, keyidlen))
 			goto err;
diff -Nur openssl-1.0.1j/crypto/rc5/rc5.h src/crypto/rc5/rc5.h
--- openssl-1.0.1j/crypto/rc5/rc5.h	2014-10-15 14:51:06.000000000 +0200
+++ src/crypto/rc5/rc5.h	2014-11-09 01:45:35.000000000 +0100
@@ -73,7 +73,11 @@
 #define RC5_DECRYPT	0
 
 /* 32 bit.  For Alpha, things may get weird */
+#ifdef __LP64__
+#define RC5_32_INT unsigned int
+#else
 #define RC5_32_INT unsigned long
+#endif
 
 #define RC5_32_BLOCK		8
 #define RC5_32_KEY_LENGTH	16 /* This is a default, max is 255 */
diff -Nur openssl-1.0.1j/crypto/x509/x509_vfy.c src/crypto/x509/x509_vfy.c
--- openssl-1.0.1j/crypto/x509/x509_vfy.c	2014-10-15 14:51:06.000000000 +0200
+++ src/crypto/x509/x509_vfy.c	2014-11-09 01:34:45.000000000 +0100
@@ -108,6 +108,13 @@
 
 #define CRL_SCORE_TIME_DELTA	0x002
 
+/*
+ * If we are using Trust Evaluation Agent, rename the original function
+ */
+#ifdef __APPLE__
+#define X509_verify_cert X509_verify_cert_orig
+#endif
+
 static int null_callback(int ok,X509_STORE_CTX *e);
 static int check_issued(X509_STORE_CTX *ctx, X509 *x, X509 *issuer);
 static X509 *find_issuer(X509_STORE_CTX *ctx, STACK_OF(X509) *sk, X509 *x);
diff -Nur openssl-1.0.1j/doc/apps/smime.pod src/doc/apps/smime.pod
--- openssl-1.0.1j/doc/apps/smime.pod	2014-10-15 14:51:06.000000000 +0200
+++ src/doc/apps/smime.pod	2014-11-09 01:33:09.000000000 +0100
@@ -308,28 +308,28 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 the operation was completely successfully.
 
-=item Z<>1
+=item B<1>
 
 an error occurred parsing the command options.
 
-=item Z<>2
+=item B<2>
 
 one of the input files could not be read.
 
-=item Z<>3
+=item B<3>
 
 an error occurred creating the PKCS#7 file or when reading the MIME
 message.
 
-=item Z<>4
+=item B<4>
 
 an error occurred decrypting or verifying the message.
 
-=item Z<>5
+=item B<5>
 
 the message was verified correctly but an error occurred writing out
 the signers certificates.
diff -Nur openssl-1.0.1j/doc/crypto/bn.pod src/doc/crypto/bn.pod
--- openssl-1.0.1j/doc/crypto/bn.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/crypto/bn.pod	2014-11-09 01:41:00.000000000 +0100
@@ -143,9 +143,9 @@
 
 =head1 DESCRIPTION
 
-This library performs arithmetic operations on integers of arbitrary
-size. It was written for use in public key cryptography, such as RSA
-and Diffie-Hellman.
+The Big Number library is part of libcrypto.  It performs arithmetic operations
+on integers of arbitrary size. It was written for use in public key cryptography,
+such as RSA and Diffie-Hellman.
 
 It uses dynamic memory allocation for storing its data structures.
 That means that there is no limit on the size of the numbers
diff -Nur openssl-1.0.1j/doc/crypto/bn_internal.pod src/doc/crypto/bn_internal.pod
--- openssl-1.0.1j/doc/crypto/bn_internal.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/crypto/bn_internal.pod	2014-11-09 01:41:07.000000000 +0100
@@ -8,7 +8,7 @@
 bn_mul_low_normal, bn_mul_recursive, bn_mul_part_recursive,
 bn_mul_low_recursive, bn_mul_high, bn_sqr_normal, bn_sqr_recursive,
 bn_expand, bn_wexpand, bn_expand2, bn_fix_top, bn_check_top,
-bn_print, bn_dump, bn_set_max, bn_set_high, bn_set_low - BIGNUM
+BN_print, bn_dump, bn_set_max, bn_set_high, bn_set_low - BIGNUM
 library internal functions
 
 =head1 SYNOPSIS
@@ -57,7 +57,7 @@
  void bn_fix_top(BIGNUM *a);
 
  void bn_check_top(BIGNUM *a);
- void bn_print(BIGNUM *a);
+ void BN_print(BIGNUM *a);
  void bn_dump(BN_ULONG *d, int n);
  void bn_set_max(BIGNUM *a);
  void bn_set_high(BIGNUM *r, BIGNUM *a, int n);
@@ -221,14 +221,14 @@
 bn_check_top() verifies that C<((a)-E<gt>top E<gt>= 0 && (a)-E<gt>top
 E<lt>= (a)-E<gt>dmax)>.  A violation will cause the program to abort.
 
-bn_print() prints B<a> to stderr. bn_dump() prints B<n> words at B<d>
+BN_print() prints B<a> to stderr. bn_dump() prints B<n> words at B<d>
 (in reverse order, i.e. most significant word first) to stderr.
 
 bn_set_max() makes B<a> a static number with a B<dmax> of its current size.
 This is used by bn_set_low() and bn_set_high() to make B<r> a read-only
 B<BIGNUM> that contains the B<n> low or high words of B<a>.
 
-If B<BN_DEBUG> is not defined, bn_check_top(), bn_print(), bn_dump()
+If B<BN_DEBUG> is not defined, bn_check_top(), BN_print(), bn_dump()
 and bn_set_max() are defined as empty macros.
 
 =head1 SEE ALSO
diff -Nur openssl-1.0.1j/doc/crypto/rand.pod src/doc/crypto/rand.pod
--- openssl-1.0.1j/doc/crypto/rand.pod	2014-10-15 13:15:29.000000000 +0200
+++ src/doc/crypto/rand.pod	2014-11-08 19:52:58.000000000 +0100
@@ -74,16 +74,16 @@
 
 =over 4
 
-=item 1
+=item B<1>
 
 A good hashing algorithm to mix things up and to convert the RNG 'state'
 to random numbers.
 
-=item 2
+=item B<2>
 
 An initial source of random 'state'.
 
-=item 3
+=item B<3>
 
 The state should be very large.  If the RNG is being used to generate
 4096 bit RSA keys, 2 2048 bit random strings are required (at a minimum).
@@ -93,13 +93,13 @@
 a bad idea to keep quite a lot of RNG state.  It should be easier to
 break a cipher than guess the RNG seed data.
 
-=item 4
+=item B<4>
 
 Any RNG seed data should influence all subsequent random numbers
 generated.  This implies that any random seed data entered will have
 an influence on all subsequent random numbers generated.
 
-=item 5
+=item B<5>
 
 When using data to seed the RNG state, the data used should not be
 extractable from the RNG state.  I believe this should be a
@@ -108,12 +108,12 @@
 not be disclosed by either subsequent random numbers or a
 'core' dump left by a program crash.
 
-=item 6
+=item B<6>
 
 Given the same initial 'state', 2 systems should deviate in their RNG state
 (and hence the random numbers generated) over time if at all possible.
 
-=item 7
+=item B<7>
 
 Given the random number output stream, it should not be possible to determine
 the RNG state or the next random number.
diff -Nur openssl-1.0.1j/doc/ssl/SSL_COMP_add_compression_method.pod src/doc/ssl/SSL_COMP_add_compression_method.pod
--- openssl-1.0.1j/doc/ssl/SSL_COMP_add_compression_method.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_COMP_add_compression_method.pod	2014-11-08 19:54:44.000000000 +0100
@@ -53,11 +53,11 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The operation succeeded.
 
-=item Z<>1
+=item B<1>
 
 The operation failed. Check the error queue to find out the reason.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_CTX_add_session.pod src/doc/ssl/SSL_CTX_add_session.pod
--- openssl-1.0.1j/doc/ssl/SSL_CTX_add_session.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_CTX_add_session.pod	2014-11-09 01:28:53.000000000 +0100
@@ -52,13 +52,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
  The operation failed. In case of the add operation, it was tried to add
  the same (identical) session twice. In case of the remove operation, the
  session was not found in the cache.
 
-=item Z<>1
+=item B<1>
  
  The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_CTX_load_verify_locations.pod src/doc/ssl/SSL_CTX_load_verify_locations.pod
--- openssl-1.0.1j/doc/ssl/SSL_CTX_load_verify_locations.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_CTX_load_verify_locations.pod	2014-11-09 01:31:24.000000000 +0100
@@ -100,13 +100,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The operation failed because B<CAfile> and B<CApath> are NULL or the
 processing at one of the locations specified failed. Check the error
 stack to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_CTX_set_client_CA_list.pod src/doc/ssl/SSL_CTX_set_client_CA_list.pod
--- openssl-1.0.1j/doc/ssl/SSL_CTX_set_client_CA_list.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_CTX_set_client_CA_list.pod	2014-11-09 01:30:35.000000000 +0100
@@ -66,13 +66,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 A failure while manipulating the STACK_OF(X509_NAME) object occurred or
 the X509_NAME could not be extracted from B<cacert>. Check the error stack
 to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_CTX_set_session_id_context.pod src/doc/ssl/SSL_CTX_set_session_id_context.pod
--- openssl-1.0.1j/doc/ssl/SSL_CTX_set_session_id_context.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_CTX_set_session_id_context.pod	2014-11-09 01:27:37.000000000 +0100
@@ -64,13 +64,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The length B<sid_ctx_len> of the session id context B<sid_ctx> exceeded
 the maximum allowed length of B<SSL_MAX_SSL_SESSION_ID_LENGTH>. The error
 is logged to the error stack.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_CTX_set_ssl_version.pod src/doc/ssl/SSL_CTX_set_ssl_version.pod
--- openssl-1.0.1j/doc/ssl/SSL_CTX_set_ssl_version.pod	2014-10-15 14:51:06.000000000 +0200
+++ src/doc/ssl/SSL_CTX_set_ssl_version.pod	2014-11-09 01:26:41.000000000 +0100
@@ -42,11 +42,11 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The new choice failed, check the error stack to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_accept.pod src/doc/ssl/SSL_accept.pod
--- openssl-1.0.1j/doc/ssl/SSL_accept.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_accept.pod	2014-11-09 01:25:11.000000000 +0100
@@ -44,13 +44,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
 return value B<ret> to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
diff -Nur openssl-1.0.1j/doc/ssl/SSL_clear.pod src/doc/ssl/SSL_clear.pod
--- openssl-1.0.1j/doc/ssl/SSL_clear.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_clear.pod	2014-11-09 01:24:40.000000000 +0100
@@ -56,12 +56,12 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The SSL_clear() operation could not be performed. Check the error stack to
 find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The SSL_clear() operation was successful.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_connect.pod src/doc/ssl/SSL_connect.pod
--- openssl-1.0.1j/doc/ssl/SSL_connect.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_connect.pod	2014-11-09 01:24:01.000000000 +0100
@@ -41,13 +41,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
 return value B<ret> to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
diff -Nur openssl-1.0.1j/doc/ssl/SSL_do_handshake.pod src/doc/ssl/SSL_do_handshake.pod
--- openssl-1.0.1j/doc/ssl/SSL_do_handshake.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_do_handshake.pod	2014-11-09 01:23:24.000000000 +0100
@@ -45,13 +45,13 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
 return value B<ret> to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
diff -Nur openssl-1.0.1j/doc/ssl/SSL_read.pod src/doc/ssl/SSL_read.pod
--- openssl-1.0.1j/doc/ssl/SSL_read.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_read.pod	2014-11-09 01:22:34.000000000 +0100
@@ -86,7 +86,7 @@
 The read operation was successful; the return value is the number of
 bytes actually read from the TLS/SSL connection.
 
-=item Z<>0
+=item B<0>
 
 The read operation was not successful. The reason may either be a clean
 shutdown due to a "close notify" alert sent by the peer (in which case
diff -Nur openssl-1.0.1j/doc/ssl/SSL_session_reused.pod src/doc/ssl/SSL_session_reused.pod
--- openssl-1.0.1j/doc/ssl/SSL_session_reused.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_session_reused.pod	2014-11-09 01:21:49.000000000 +0100
@@ -27,11 +27,11 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 A new session was negotiated.
 
-=item Z<>1
+=item B<1>
 
 A session was reused.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_set_fd.pod src/doc/ssl/SSL_set_fd.pod
--- openssl-1.0.1j/doc/ssl/SSL_set_fd.pod	2014-08-07 00:12:03.000000000 +0200
+++ src/doc/ssl/SSL_set_fd.pod	2014-11-09 01:21:01.000000000 +0100
@@ -35,11 +35,11 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The operation failed. Check the error stack to find out why.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_set_session.pod src/doc/ssl/SSL_set_session.pod
--- openssl-1.0.1j/doc/ssl/SSL_set_session.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_set_session.pod	2014-11-09 01:20:10.000000000 +0100
@@ -37,11 +37,11 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The operation failed; check the error stack to find out the reason.
 
-=item Z<>1
+=item B<1>
 
 The operation succeeded.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_set_shutdown.pod src/doc/ssl/SSL_set_shutdown.pod
--- openssl-1.0.1j/doc/ssl/SSL_set_shutdown.pod	2014-10-15 14:51:06.000000000 +0200
+++ src/doc/ssl/SSL_set_shutdown.pod	2014-11-09 01:19:09.000000000 +0100
@@ -24,7 +24,7 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 No shutdown setting, yet.
 
diff -Nur openssl-1.0.1j/doc/ssl/SSL_shutdown.pod src/doc/ssl/SSL_shutdown.pod
--- openssl-1.0.1j/doc/ssl/SSL_shutdown.pod	2014-10-15 14:51:06.000000000 +0200
+++ src/doc/ssl/SSL_shutdown.pod	2014-11-09 01:18:14.000000000 +0100
@@ -92,19 +92,19 @@
 
 =over 4
 
-=item Z<>0
+=item B<0>
 
 The shutdown is not yet finished. Call SSL_shutdown() for a second time,
 if a bidirectional shutdown shall be performed.
 The output of L<SSL_get_error(3)|SSL_get_error(3)> may be misleading, as an
 erroneous SSL_ERROR_SYSCALL may be flagged even though no error occurred.
 
-=item Z<>1
+=item B<1>
 
 The shutdown was successfully completed. The "close notify" alert was sent
 and the peer's "close notify" alert was received.
 
-=item -1
+=item B<-1>
 
 The shutdown was not successful because a fatal error occurred either
 at the protocol level or a connection failure occurred. It can also occur if
diff -Nur openssl-1.0.1j/doc/ssl/SSL_write.pod src/doc/ssl/SSL_write.pod
--- openssl-1.0.1j/doc/ssl/SSL_write.pod	2014-07-22 21:41:23.000000000 +0200
+++ src/doc/ssl/SSL_write.pod	2014-11-09 01:28:14.000000000 +0100
@@ -79,7 +79,7 @@
 The write operation was successful, the return value is the number of
 bytes actually written to the TLS/SSL connection.
 
-=item Z<>0
+=item B<0>
 
 The write operation was not successful. Probably the underlying connection
 was closed. Call SSL_get_error() with the return value B<ret> to find out,
diff -Nur openssl-1.0.1j/ms/test.bat src/ms/test.bat
--- openssl-1.0.1j/ms/test.bat	2014-10-15 14:51:06.000000000 +0200
+++ src/ms/test.bat	2014-11-08 19:50:44.000000000 +0100
@@ -15,10 +15,6 @@
 destest
 if errorlevel 1 goto done
 
-echo ideatest
-ideatest
-if errorlevel 1 goto done
-
 echo bftest
 bftest
 if errorlevel 1 goto done
@@ -183,3 +179,4 @@
 echo problems.....
 :end
 PATH=%opath%
+if errorlevel 1 exit /b 1
diff -Nur openssl-1.0.1j/ssl/ssl_ciph.c src/ssl/ssl_ciph.c
--- openssl-1.0.1j/ssl/ssl_ciph.c	2014-10-15 14:53:39.000000000 +0200
+++ src/ssl/ssl_ciph.c	2014-11-08 19:50:38.000000000 +0100
@@ -456,24 +456,6 @@
 
 			MemCheck_off();
 			ssl_comp_methods=sk_SSL_COMP_new(sk_comp_cmp);
-			if (ssl_comp_methods != NULL)
-				{
-				comp=(SSL_COMP *)OPENSSL_malloc(sizeof(SSL_COMP));
-				if (comp != NULL)
-					{
-					comp->method=COMP_zlib();
-					if (comp->method
-						&& comp->method->type == NID_undef)
-						OPENSSL_free(comp);
-					else
-						{
-						comp->id=SSL_COMP_ZLIB_IDX;
-						comp->name=comp->method->name;
-						sk_SSL_COMP_push(ssl_comp_methods,comp);
-						}
-					}
-					sk_SSL_COMP_sort(ssl_comp_methods);
-				}
 			MemCheck_on();
 			}
 		}
diff -Nur openssl-1.0.1j/util/mk1mf.pl src/util/mk1mf.pl
--- openssl-1.0.1j/util/mk1mf.pl	2014-10-15 14:54:01.000000000 +0200
+++ src/util/mk1mf.pl	2014-11-09 01:47:08.000000000 +0100
@@ -141,6 +141,8 @@
 	print STDERR "unknown option - $_\n" if !&read_options;
 	}
 
+if ($ENV{"DEBUG_BUILD"}) { $debug = 1; } # APPLE-SPECIFIC hack to force debug build
+
 $no_static_engine = 0 if (!$shlib);
 
 $no_mdc2=1 if ($no_des);
@@ -460,7 +462,7 @@
 SRC_D=$src_dir
 
 LINK=$link
-LFLAGS=$lflags
+LFLAGS=$lflags \$(EXTRA_LFLAGS)   # <rdar://problem/7370791> allow LFLAGS to be modified externally
 RSC=$rsc
 
 # The output directory for everything intersting
@@ -477,8 +479,8 @@
 RANLIB=$ranlib
 MKDIR=$mkdir
 MKLIB=$bin_dir$mklib
-MLFLAGS=$mlflags
-ASM=$bin_dir$asm
+MLFLAGS=$mlflags \$(EXTRA_MLFLAGS)    # <rdar://problem/7370791> allow MLFLAGS to be modified externally
+ASM=$bin_dir$asm \$(EXTRA_ASMFLAGS)   # <rdar://problem/7370791> allow ASMFLAGS to be modified externally
 
 # FIPS validated module and support file locations
 
@@ -487,6 +489,7 @@
 FIPSLIB_D=\$(FIPSDIR)${o}lib
 FIPS_PREMAIN_SRC=\$(FIPSLIB_D)${o}fips_premain.c
 O_FIPSCANISTER=\$(FIPSLIB_D)${o}fipscanister.lib
+all_noexe: banner \$(TMP_D) \$(BIN_D) \$(TEST_D) \$(LIB_D) \$(INCO_D) headers \$
 FIPS_SHA1_EXE=\$(FIPSDIR)${o}bin${o}fips_standalone_sha1${exep}
 E_PREMAIN_DSO=fips_premain_dso
 PREMAIN_DSO_EXE=\$(BIN_D)${o}fips_premain_dso$exep
diff -Nur openssl-1.0.1j/util/mkdef.pl src/util/mkdef.pl
--- openssl-1.0.1j/util/mkdef.pl	2014-10-15 14:54:01.000000000 +0200
+++ src/util/mkdef.pl	2014-11-08 19:50:44.000000000 +0100
@@ -1310,6 +1310,7 @@
 		  $description = "\@#$http_vendor:$version#\@$what; DLL for library $name.  Build for EMX -Zmtd";
 		}
 
+	if ($ENV{"DEBUG_BUILD"}) { $libname .= "_DEBUG"; } # APPLE-SPECIFIC hack to force debug build
 	print OUT <<"EOF";
 ;
 ; Definition file for the DLL version of the $name library from OpenSSL
diff -Nur openssl-1.0.1j/util/opensslwrap.sh src/util/opensslwrap.sh
--- openssl-1.0.1j/util/opensslwrap.sh	2014-07-22 21:41:23.000000000 +0200
+++ src/util/opensslwrap.sh	2014-11-09 01:45:41.000000000 +0100
@@ -19,7 +19,7 @@
 		PATH="${HERE}..:$PATH"; export PATH
 	fi
 	exec "${OPENSSL}.exe" "$@"
-elif [ -x "${OPENSSL}" -a -x "${HERE}shlib_wrap.sh" ]; then
+elif [ -x "${HERE}shlib_wrap.sh" ]; then
 	exec "${HERE}shlib_wrap.sh" "${OPENSSL}" "$@"
 else
 	exec "${OPENSSL}" "$@"	# hope for the best...
diff -Nur openssl-1.0.1j/util/pl/VC-32.pl src/util/pl/VC-32.pl
--- openssl-1.0.1j/util/pl/VC-32.pl	2014-10-15 14:53:39.000000000 +0200
+++ src/util/pl/VC-32.pl	2014-11-09 01:52:39.000000000 +0100
@@ -45,7 +45,7 @@
     # considered safe to ignore.
     # 
     $base_cflags= " $mf_cflag";
-    my $f = $shlib || $fips ?' /MD':' /MT';
+    my $f = ' /MT';
     $lib_cflag='/Zl' if (!$shlib);	# remove /DEFAULTLIBs from static lib
     $opt_cflags=$f.' /Ox';
     $dbg_cflags=$f.'d /Od -DDEBUG -D_DEBUG';
@@ -126,7 +126,7 @@
 else	# Win32
     {
     $base_cflags= " $mf_cflag";
-    my $f = $shlib || $fips ?' /MD':' /MT';
+    my $f = ' /MT';
     $lib_cflag='/Zl' if (!$shlib);	# remove /DEFAULTLIBs from static lib
     $ff = "/fixed";
     $opt_cflags=$f.' /Ox /O2 /Ob2';
@@ -151,8 +151,8 @@
 	}
 
 # generate symbols.pdb unconditionally
-$app_cflag.=" /Zi /Fd\$(TMP_D)/app";
-$lib_cflag.=" /Zi /Fd\$(TMP_D)/lib";
+$app_cflag.=" /Zi /Fd$(PDB_PATH)";
+$lib_cflag.=" /Zi /Fd$(PDB_PATH)";
 $lflags.=" /debug";
 
 $obj='.obj';
diff -Nur openssl-1.0.1j/util/shlib_wrap.sh src/util/shlib_wrap.sh
--- openssl-1.0.1j/util/shlib_wrap.sh	2014-10-15 14:53:39.000000000 +0200
+++ src/util/shlib_wrap.sh	2014-11-09 01:46:39.000000000 +0100
@@ -88,10 +88,6 @@
 	export LD_PRELOAD _RLD_LIST DYLD_INSERT_LIBRARIES
 fi
 
-cmd="$1${EXE_EXT}"
+PROG=$(echo "$1" | sed 's|.*/||' )
 shift
-if [ $# -eq 0 ]; then
-	exec "$cmd"	# old sh, such as Tru64 4.x, fails to expand empty "$@"
-else
-	exec "$cmd" "$@"
-fi
+exec "${TARGET_BUILD_DIR}/${PROG}" "$@"
