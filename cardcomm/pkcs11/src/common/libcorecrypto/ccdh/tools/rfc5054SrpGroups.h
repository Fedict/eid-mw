/*
 * Copyright (c) 2012,2015 Apple Inc. All rights reserved.
 * 
 * corecrypto Internal Use License Agreement
 * 
 * IMPORTANT:  This Apple corecrypto software is supplied to you by Apple Inc. ("Apple")
 * in consideration of your agreement to the following terms, and your download or use
 * of this Apple software constitutes acceptance of these terms.  If you do not agree
 * with these terms, please do not download or use this Apple software.
 * 
 * 1.	As used in this Agreement, the term "Apple Software" collectively means and
 * includes all of the Apple corecrypto materials provided by Apple here, including
 * but not limited to the Apple corecrypto software, frameworks, libraries, documentation
 * and other Apple-created materials. In consideration of your agreement to abide by the
 * following terms, conditioned upon your compliance with these terms and subject to
 * these terms, Apple grants you, for a period of ninety (90) days from the date you
 * download the Apple Software, a limited, non-exclusive, non-sublicensable license
 * under Apple’s copyrights in the Apple Software to make a reasonable number of copies
 * of, compile, and run the Apple Software internally within your organization only on
 * devices and computers you own or control, for the sole purpose of verifying the
 * security characteristics and correct functioning of the Apple Software; provided
 * that you must retain this notice and the following text and disclaimers in all
 * copies of the Apple Software that you make. You may not, directly or indirectly,
 * redistribute the Apple Software or any portions thereof. The Apple Software is only
 * licensed and intended for use as expressly stated above and may not be used for other
 * purposes or in other contexts without Apple's prior written permission.  Except as
 * expressly stated in this notice, no other rights or licenses, express or implied, are
 * granted by Apple herein.
 * 
 * 2.	The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES
 * OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, REGARDING
 * THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN COMBINATION WITH YOUR PRODUCTS,
 * SYSTEMS, OR SERVICES. APPLE DOES NOT WARRANT THAT THE APPLE SOFTWARE WILL MEET YOUR
 * REQUIREMENTS, THAT THE OPERATION OF THE APPLE SOFTWARE WILL BE UNINTERRUPTED OR
 * ERROR-FREE, THAT DEFECTS IN THE APPLE SOFTWARE WILL BE CORRECTED, OR THAT THE APPLE
 * SOFTWARE WILL BE COMPATIBLE WITH FUTURE APPLE PRODUCTS, SOFTWARE OR SERVICES. NO ORAL
 * OR WRITTEN INFORMATION OR ADVICE GIVEN BY APPLE OR AN APPLE AUTHORIZED REPRESENTATIVE
 * WILL CREATE A WARRANTY. 
 * 
 * 3.	IN NO EVENT SHALL APPLE BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ARISING
 * IN ANY WAY OUT OF THE USE, REPRODUCTION, COMPILATION OR OPERATION OF THE APPLE
 * SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING
 * NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * 4.	This Agreement is effective until terminated. Your rights under this Agreement will
 * terminate automatically without notice from Apple if you fail to comply with any term(s)
 * of this Agreement.  Upon termination, you agree to cease all use of the Apple Software
 * and destroy all copies, full or partial, of the Apple Software. This Agreement will be
 * governed and construed in accordance with the laws of the State of California, without
 * regard to its choice of law rules.
 * 
 * You may report security issues about Apple products to product-security@apple.com,
 * as described here:  https://www.apple.com/support/security/.  Non-security bugs and
 * enhancement requests can be made via https://bugreport.apple.com as described
 * here: https://developer.apple.com/bug-reporting/
 *
 * EA1350 
 * 10/5/15
 */


#ifndef corecrypto_rfc5054SrpGroups_h
#define corecrypto_rfc5054SrpGroups_h

// SRP Groups specified in RFC 5054
// Private keylength chosen per NIST recommendation (SP800-57)
// since primes are safe prime and Pohlig-Hellman can't apply.

static struct {
    uint8_t l[1];
    uint8_t p[128];
    uint8_t g[1];
} rfc5054_1024 = {
    .l = { 160, },
    .p = {
        0xEE, 0xAF, 0x0A, 0xB9,  0xAD, 0xB3, 0x8D, 0xD6,  0x9C, 0x33, 0xF8, 0x0A,  0xFA, 0x8F, 0xC5, 0xE8,
        0x60, 0x72, 0x61, 0x87,  0x75, 0xFF, 0x3C, 0x0B,  0x9E, 0xA2, 0x31, 0x4C,  0x9C, 0x25, 0x65, 0x76,
        0xD6, 0x74, 0xDF, 0x74,  0x96, 0xEA, 0x81, 0xD3,  0x38, 0x3B, 0x48, 0x13,  0xD6, 0x92, 0xC6, 0xE0,
        0xE0, 0xD5, 0xD8, 0xE2,  0x50, 0xB9, 0x8B, 0xE4,  0x8E, 0x49, 0x5C, 0x1D,  0x60, 0x89, 0xDA, 0xD1,
        0x5D, 0xC7, 0xD7, 0xB4,  0x61, 0x54, 0xD6, 0xB6,  0xCE, 0x8E, 0xF4, 0xAD,  0x69, 0xB1, 0x5D, 0x49,
        0x82, 0x55, 0x9B, 0x29,  0x7B, 0xCF, 0x18, 0x85,  0xC5, 0x29, 0xF5, 0x66,  0x66, 0x0E, 0x57, 0xEC,
        0x68, 0xED, 0xBC, 0x3C,  0x05, 0x72, 0x6C, 0xC0,  0x2F, 0xD4, 0xCB, 0xF4,  0x97, 0x6E, 0xAA, 0x9A,
        0xFD, 0x51, 0x38, 0xFE,  0x83, 0x76, 0x43, 0x5B,  0x9F, 0xC6, 0x1D, 0x2F,  0xC0, 0xEB, 0x06, 0xE3,
    },
    .g = { 2, }
};

static struct {
    uint8_t l[2];
    uint8_t p[256];
    uint8_t g[1];
} rfc5054_2048 = {
    .l = { (256>>8), (256&0xFF) },
    .p = {
        0xAC, 0x6B, 0xDB, 0x41,  0x32, 0x4A, 0x9A, 0x9B,  0xF1, 0x66, 0xDE, 0x5E,  0x13, 0x89, 0x58, 0x2F,
        0xAF, 0x72, 0xB6, 0x65,  0x19, 0x87, 0xEE, 0x07,  0xFC, 0x31, 0x92, 0x94,  0x3D, 0xB5, 0x60, 0x50,
        0xA3, 0x73, 0x29, 0xCB,  0xB4, 0xA0, 0x99, 0xED,  0x81, 0x93, 0xE0, 0x75,  0x77, 0x67, 0xA1, 0x3D,
        0xD5, 0x23, 0x12, 0xAB,  0x4B, 0x03, 0x31, 0x0D,  0xCD, 0x7F, 0x48, 0xA9,  0xDA, 0x04, 0xFD, 0x50,
        0xE8, 0x08, 0x39, 0x69,  0xED, 0xB7, 0x67, 0xB0,  0xCF, 0x60, 0x95, 0x17,  0x9A, 0x16, 0x3A, 0xB3,
        0x66, 0x1A, 0x05, 0xFB,  0xD5, 0xFA, 0xAA, 0xE8,  0x29, 0x18, 0xA9, 0x96,  0x2F, 0x0B, 0x93, 0xB8,
        0x55, 0xF9, 0x79, 0x93,  0xEC, 0x97, 0x5E, 0xEA,  0xA8, 0x0D, 0x74, 0x0A,  0xDB, 0xF4, 0xFF, 0x74,
        0x73, 0x59, 0xD0, 0x41,  0xD5, 0xC3, 0x3E, 0xA7,  0x1D, 0x28, 0x1E, 0x44,  0x6B, 0x14, 0x77, 0x3B,
        0xCA, 0x97, 0xB4, 0x3A,  0x23, 0xFB, 0x80, 0x16,  0x76, 0xBD, 0x20, 0x7A,  0x43, 0x6C, 0x64, 0x81,
        0xF1, 0xD2, 0xB9, 0x07,  0x87, 0x17, 0x46, 0x1A,  0x5B, 0x9D, 0x32, 0xE6,  0x88, 0xF8, 0x77, 0x48,
        0x54, 0x45, 0x23, 0xB5,  0x24, 0xB0, 0xD5, 0x7D,  0x5E, 0xA7, 0x7A, 0x27,  0x75, 0xD2, 0xEC, 0xFA,
        0x03, 0x2C, 0xFB, 0xDB,  0xF5, 0x2F, 0xB3, 0x78,  0x61, 0x60, 0x27, 0x90,  0x04, 0xE5, 0x7A, 0xE6,
        0xAF, 0x87, 0x4E, 0x73,  0x03, 0xCE, 0x53, 0x29,  0x9C, 0xCC, 0x04, 0x1C,  0x7B, 0xC3, 0x08, 0xD8,
        0x2A, 0x56, 0x98, 0xF3,  0xA8, 0xD0, 0xC3, 0x82,  0x71, 0xAE, 0x35, 0xF8,  0xE9, 0xDB, 0xFB, 0xB6,
        0x94, 0xB5, 0xC8, 0x03,  0xD8, 0x9F, 0x7A, 0xE4,  0x35, 0xDE, 0x23, 0x6D,  0x52, 0x5F, 0x54, 0x75,
        0x9B, 0x65, 0xE3, 0x72,  0xFC, 0xD6, 0x8E, 0xF2,  0x0F, 0xA7, 0x11, 0x1F,  0x9E, 0x4A, 0xFF, 0x73,
    },
    .g = { 2, }
};

static struct {
    uint8_t l[2];
    uint8_t p[384];
    uint8_t g[1];
} rfc5054_3072 = {
    .l = { (256>>8), (256&0xFF) },
    .p = {
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc9, 0x0f, 0xda, 0xa2,
        0x21, 0x68, 0xc2, 0x34, 0xc4, 0xc6, 0x62, 0x8b, 0x80, 0xdc, 0x1c, 0xd1,
        0x29, 0x02, 0x4e, 0x08, 0x8a, 0x67, 0xcc, 0x74, 0x02, 0x0b, 0xbe, 0xa6,
        0x3b, 0x13, 0x9b, 0x22, 0x51, 0x4a, 0x08, 0x79, 0x8e, 0x34, 0x04, 0xdd,
        0xef, 0x95, 0x19, 0xb3, 0xcd, 0x3a, 0x43, 0x1b, 0x30, 0x2b, 0x0a, 0x6d,
        0xf2, 0x5f, 0x14, 0x37, 0x4f, 0xe1, 0x35, 0x6d, 0x6d, 0x51, 0xc2, 0x45,
        0xe4, 0x85, 0xb5, 0x76, 0x62, 0x5e, 0x7e, 0xc6, 0xf4, 0x4c, 0x42, 0xe9,
        0xa6, 0x37, 0xed, 0x6b, 0x0b, 0xff, 0x5c, 0xb6, 0xf4, 0x06, 0xb7, 0xed,
        0xee, 0x38, 0x6b, 0xfb, 0x5a, 0x89, 0x9f, 0xa5, 0xae, 0x9f, 0x24, 0x11,
        0x7c, 0x4b, 0x1f, 0xe6, 0x49, 0x28, 0x66, 0x51, 0xec, 0xe4, 0x5b, 0x3d,
        0xc2, 0x00, 0x7c, 0xb8, 0xa1, 0x63, 0xbf, 0x05, 0x98, 0xda, 0x48, 0x36,
        0x1c, 0x55, 0xd3, 0x9a, 0x69, 0x16, 0x3f, 0xa8, 0xfd, 0x24, 0xcf, 0x5f,
        0x83, 0x65, 0x5d, 0x23, 0xdc, 0xa3, 0xad, 0x96, 0x1c, 0x62, 0xf3, 0x56,
        0x20, 0x85, 0x52, 0xbb, 0x9e, 0xd5, 0x29, 0x07, 0x70, 0x96, 0x96, 0x6d,
        0x67, 0x0c, 0x35, 0x4e, 0x4a, 0xbc, 0x98, 0x04, 0xf1, 0x74, 0x6c, 0x08,
        0xca, 0x18, 0x21, 0x7c, 0x32, 0x90, 0x5e, 0x46, 0x2e, 0x36, 0xce, 0x3b,
        0xe3, 0x9e, 0x77, 0x2c, 0x18, 0x0e, 0x86, 0x03, 0x9b, 0x27, 0x83, 0xa2,
        0xec, 0x07, 0xa2, 0x8f, 0xb5, 0xc5, 0x5d, 0xf0, 0x6f, 0x4c, 0x52, 0xc9,
        0xde, 0x2b, 0xcb, 0xf6, 0x95, 0x58, 0x17, 0x18, 0x39, 0x95, 0x49, 0x7c,
        0xea, 0x95, 0x6a, 0xe5, 0x15, 0xd2, 0x26, 0x18, 0x98, 0xfa, 0x05, 0x10,
        0x15, 0x72, 0x8e, 0x5a, 0x8a, 0xaa, 0xc4, 0x2d, 0xad, 0x33, 0x17, 0x0d,
        0x04, 0x50, 0x7a, 0x33, 0xa8, 0x55, 0x21, 0xab, 0xdf, 0x1c, 0xba, 0x64,
        0xec, 0xfb, 0x85, 0x04, 0x58, 0xdb, 0xef, 0x0a, 0x8a, 0xea, 0x71, 0x57,
        0x5d, 0x06, 0x0c, 0x7d, 0xb3, 0x97, 0x0f, 0x85, 0xa6, 0xe1, 0xe4, 0xc7,
        0xab, 0xf5, 0xae, 0x8c, 0xdb, 0x09, 0x33, 0xd7, 0x1e, 0x8c, 0x94, 0xe0,
        0x4a, 0x25, 0x61, 0x9d, 0xce, 0xe3, 0xd2, 0x26, 0x1a, 0xd2, 0xee, 0x6b,
        0xf1, 0x2f, 0xfa, 0x06, 0xd9, 0x8a, 0x08, 0x64, 0xd8, 0x76, 0x02, 0x73,
        0x3e, 0xc8, 0x6a, 0x64, 0x52, 0x1f, 0x2b, 0x18, 0x17, 0x7b, 0x20, 0x0c,
        0xbb, 0xe1, 0x17, 0x57, 0x7a, 0x61, 0x5d, 0x6c, 0x77, 0x09, 0x88, 0xc0,
        0xba, 0xd9, 0x46, 0xe2, 0x08, 0xe2, 0x4f, 0xa0, 0x74, 0xe5, 0xab, 0x31,
        0x43, 0xdb, 0x5b, 0xfc, 0xe0, 0xfd, 0x10, 0x8e, 0x4b, 0x82, 0xd1, 0x20,
        0xa9, 0x3a, 0xd2, 0xca, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    },
    .g = { 5, }
};

static struct {
    uint8_t l[2];
    uint8_t p[512];
    uint8_t g[1];
} rfc5054_4096 = {
    .l = { (384>>8), (384&0xFF) },
    .p = {
        0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0xC9, 0x0F, 0xDA, 0xA2,  0x21, 0x68, 0xC2, 0x34,
        0xC4, 0xC6, 0x62, 0x8B,  0x80, 0xDC, 0x1C, 0xD1,  0x29, 0x02, 0x4E, 0x08,  0x8A, 0x67, 0xCC, 0x74,
        0x02, 0x0B, 0xBE, 0xA6,  0x3B, 0x13, 0x9B, 0x22,  0x51, 0x4A, 0x08, 0x79,  0x8E, 0x34, 0x04, 0xDD,
        0xEF, 0x95, 0x19, 0xB3,  0xCD, 0x3A, 0x43, 0x1B,  0x30, 0x2B, 0x0A, 0x6D,  0xF2, 0x5F, 0x14, 0x37,
        0x4F, 0xE1, 0x35, 0x6D,  0x6D, 0x51, 0xC2, 0x45,  0xE4, 0x85, 0xB5, 0x76,  0x62, 0x5E, 0x7E, 0xC6,
        0xF4, 0x4C, 0x42, 0xE9,  0xA6, 0x37, 0xED, 0x6B,  0x0B, 0xFF, 0x5C, 0xB6,  0xF4, 0x06, 0xB7, 0xED,
        0xEE, 0x38, 0x6B, 0xFB,  0x5A, 0x89, 0x9F, 0xA5,  0xAE, 0x9F, 0x24, 0x11,  0x7C, 0x4B, 0x1F, 0xE6,
        0x49, 0x28, 0x66, 0x51,  0xEC, 0xE4, 0x5B, 0x3D,  0xC2, 0x00, 0x7C, 0xB8,  0xA1, 0x63, 0xBF, 0x05,
        0x98, 0xDA, 0x48, 0x36,  0x1C, 0x55, 0xD3, 0x9A,  0x69, 0x16, 0x3F, 0xA8,  0xFD, 0x24, 0xCF, 0x5F,
        0x83, 0x65, 0x5D, 0x23,  0xDC, 0xA3, 0xAD, 0x96,  0x1C, 0x62, 0xF3, 0x56,  0x20, 0x85, 0x52, 0xBB,
        0x9E, 0xD5, 0x29, 0x07,  0x70, 0x96, 0x96, 0x6D,  0x67, 0x0C, 0x35, 0x4E,  0x4A, 0xBC, 0x98, 0x04,
        0xF1, 0x74, 0x6C, 0x08,  0xCA, 0x18, 0x21, 0x7C,  0x32, 0x90, 0x5E, 0x46,  0x2E, 0x36, 0xCE, 0x3B,
        0xE3, 0x9E, 0x77, 0x2C,  0x18, 0x0E, 0x86, 0x03,  0x9B, 0x27, 0x83, 0xA2,  0xEC, 0x07, 0xA2, 0x8F,
        0xB5, 0xC5, 0x5D, 0xF0,  0x6F, 0x4C, 0x52, 0xC9,  0xDE, 0x2B, 0xCB, 0xF6,  0x95, 0x58, 0x17, 0x18,
        0x39, 0x95, 0x49, 0x7C,  0xEA, 0x95, 0x6A, 0xE5,  0x15, 0xD2, 0x26, 0x18,  0x98, 0xFA, 0x05, 0x10,
        0x15, 0x72, 0x8E, 0x5A,  0x8A, 0xAA, 0xC4, 0x2D,  0xAD, 0x33, 0x17, 0x0D,  0x04, 0x50, 0x7A, 0x33,
        0xA8, 0x55, 0x21, 0xAB,  0xDF, 0x1C, 0xBA, 0x64,  0xEC, 0xFB, 0x85, 0x04,  0x58, 0xDB, 0xEF, 0x0A,
        0x8A, 0xEA, 0x71, 0x57,  0x5D, 0x06, 0x0C, 0x7D,  0xB3, 0x97, 0x0F, 0x85,  0xA6, 0xE1, 0xE4, 0xC7,
        0xAB, 0xF5, 0xAE, 0x8C,  0xDB, 0x09, 0x33, 0xD7,  0x1E, 0x8C, 0x94, 0xE0,  0x4A, 0x25, 0x61, 0x9D,
        0xCE, 0xE3, 0xD2, 0x26,  0x1A, 0xD2, 0xEE, 0x6B,  0xF1, 0x2F, 0xFA, 0x06,  0xD9, 0x8A, 0x08, 0x64,
        0xD8, 0x76, 0x02, 0x73,  0x3E, 0xC8, 0x6A, 0x64,  0x52, 0x1F, 0x2B, 0x18,  0x17, 0x7B, 0x20, 0x0C,
        0xBB, 0xE1, 0x17, 0x57,  0x7A, 0x61, 0x5D, 0x6C,  0x77, 0x09, 0x88, 0xC0,  0xBA, 0xD9, 0x46, 0xE2,
        0x08, 0xE2, 0x4F, 0xA0,  0x74, 0xE5, 0xAB, 0x31,  0x43, 0xDB, 0x5B, 0xFC,  0xE0, 0xFD, 0x10, 0x8E,
        0x4B, 0x82, 0xD1, 0x20,  0xA9, 0x21, 0x08, 0x01,  0x1A, 0x72, 0x3C, 0x12,  0xA7, 0x87, 0xE6, 0xD7,
        0x88, 0x71, 0x9A, 0x10,  0xBD, 0xBA, 0x5B, 0x26,  0x99, 0xC3, 0x27, 0x18,  0x6A, 0xF4, 0xE2, 0x3C,
        0x1A, 0x94, 0x68, 0x34,  0xB6, 0x15, 0x0B, 0xDA,  0x25, 0x83, 0xE9, 0xCA,  0x2A, 0xD4, 0x4C, 0xE8,
        0xDB, 0xBB, 0xC2, 0xDB,  0x04, 0xDE, 0x8E, 0xF9,  0x2E, 0x8E, 0xFC, 0x14,  0x1F, 0xBE, 0xCA, 0xA6,
        0x28, 0x7C, 0x59, 0x47,  0x4E, 0x6B, 0xC0, 0x5D,  0x99, 0xB2, 0x96, 0x4F,  0xA0, 0x90, 0xC3, 0xA2,
        0x23, 0x3B, 0xA1, 0x86,  0x51, 0x5B, 0xE7, 0xED,  0x1F, 0x61, 0x29, 0x70,  0xCE, 0xE2, 0xD7, 0xAF,
        0xB8, 0x1B, 0xDD, 0x76,  0x21, 0x70, 0x48, 0x1C,  0xD0, 0x06, 0x91, 0x27,  0xD5, 0xB0, 0x5A, 0xA9,
        0x93, 0xB4, 0xEA, 0x98,  0x8D, 0x8F, 0xDD, 0xC1,  0x86, 0xFF, 0xB7, 0xDC,  0x90, 0xA6, 0xC0, 0x8F,
        0x4D, 0xF4, 0x35, 0xC9,  0x34, 0x06, 0x31, 0x99,  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,
    },
    .g = { 5, }
};

static struct {
    uint8_t l[2];
    uint8_t p[1024];
    uint8_t g[1];
} rfc5054_8192 = {
    .l = { (384>>8), (384&0xFF) },
    .p = {
        0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0xC9, 0x0F, 0xDA, 0xA2,  0x21, 0x68, 0xC2, 0x34,
        0xC4, 0xC6, 0x62, 0x8B,  0x80, 0xDC, 0x1C, 0xD1,  0x29, 0x02, 0x4E, 0x08,  0x8A, 0x67, 0xCC, 0x74,
        0x02, 0x0B, 0xBE, 0xA6,  0x3B, 0x13, 0x9B, 0x22,  0x51, 0x4A, 0x08, 0x79,  0x8E, 0x34, 0x04, 0xDD,
        0xEF, 0x95, 0x19, 0xB3,  0xCD, 0x3A, 0x43, 0x1B,  0x30, 0x2B, 0x0A, 0x6D,  0xF2, 0x5F, 0x14, 0x37,
        0x4F, 0xE1, 0x35, 0x6D,  0x6D, 0x51, 0xC2, 0x45,  0xE4, 0x85, 0xB5, 0x76,  0x62, 0x5E, 0x7E, 0xC6,
        0xF4, 0x4C, 0x42, 0xE9,  0xA6, 0x37, 0xED, 0x6B,  0x0B, 0xFF, 0x5C, 0xB6,  0xF4, 0x06, 0xB7, 0xED,
        0xEE, 0x38, 0x6B, 0xFB,  0x5A, 0x89, 0x9F, 0xA5,  0xAE, 0x9F, 0x24, 0x11,  0x7C, 0x4B, 0x1F, 0xE6,
        0x49, 0x28, 0x66, 0x51,  0xEC, 0xE4, 0x5B, 0x3D,  0xC2, 0x00, 0x7C, 0xB8,  0xA1, 0x63, 0xBF, 0x05,
        0x98, 0xDA, 0x48, 0x36,  0x1C, 0x55, 0xD3, 0x9A,  0x69, 0x16, 0x3F, 0xA8,  0xFD, 0x24, 0xCF, 0x5F,
        0x83, 0x65, 0x5D, 0x23,  0xDC, 0xA3, 0xAD, 0x96,  0x1C, 0x62, 0xF3, 0x56,  0x20, 0x85, 0x52, 0xBB,
        0x9E, 0xD5, 0x29, 0x07,  0x70, 0x96, 0x96, 0x6D,  0x67, 0x0C, 0x35, 0x4E,  0x4A, 0xBC, 0x98, 0x04,
        0xF1, 0x74, 0x6C, 0x08,  0xCA, 0x18, 0x21, 0x7C,  0x32, 0x90, 0x5E, 0x46,  0x2E, 0x36, 0xCE, 0x3B,
        0xE3, 0x9E, 0x77, 0x2C,  0x18, 0x0E, 0x86, 0x03,  0x9B, 0x27, 0x83, 0xA2,  0xEC, 0x07, 0xA2, 0x8F,
        0xB5, 0xC5, 0x5D, 0xF0,  0x6F, 0x4C, 0x52, 0xC9,  0xDE, 0x2B, 0xCB, 0xF6,  0x95, 0x58, 0x17, 0x18,
        0x39, 0x95, 0x49, 0x7C,  0xEA, 0x95, 0x6A, 0xE5,  0x15, 0xD2, 0x26, 0x18,  0x98, 0xFA, 0x05, 0x10,
        0x15, 0x72, 0x8E, 0x5A,  0x8A, 0xAA, 0xC4, 0x2D,  0xAD, 0x33, 0x17, 0x0D,  0x04, 0x50, 0x7A, 0x33,
        0xA8, 0x55, 0x21, 0xAB,  0xDF, 0x1C, 0xBA, 0x64,  0xEC, 0xFB, 0x85, 0x04,  0x58, 0xDB, 0xEF, 0x0A,
        0x8A, 0xEA, 0x71, 0x57,  0x5D, 0x06, 0x0C, 0x7D,  0xB3, 0x97, 0x0F, 0x85,  0xA6, 0xE1, 0xE4, 0xC7,
        0xAB, 0xF5, 0xAE, 0x8C,  0xDB, 0x09, 0x33, 0xD7,  0x1E, 0x8C, 0x94, 0xE0,  0x4A, 0x25, 0x61, 0x9D,
        0xCE, 0xE3, 0xD2, 0x26,  0x1A, 0xD2, 0xEE, 0x6B,  0xF1, 0x2F, 0xFA, 0x06,  0xD9, 0x8A, 0x08, 0x64,
        0xD8, 0x76, 0x02, 0x73,  0x3E, 0xC8, 0x6A, 0x64,  0x52, 0x1F, 0x2B, 0x18,  0x17, 0x7B, 0x20, 0x0C,
        0xBB, 0xE1, 0x17, 0x57,  0x7A, 0x61, 0x5D, 0x6C,  0x77, 0x09, 0x88, 0xC0,  0xBA, 0xD9, 0x46, 0xE2,
        0x08, 0xE2, 0x4F, 0xA0,  0x74, 0xE5, 0xAB, 0x31,  0x43, 0xDB, 0x5B, 0xFC,  0xE0, 0xFD, 0x10, 0x8E,
        0x4B, 0x82, 0xD1, 0x20,  0xA9, 0x21, 0x08, 0x01,  0x1A, 0x72, 0x3C, 0x12,  0xA7, 0x87, 0xE6, 0xD7,
        0x88, 0x71, 0x9A, 0x10,  0xBD, 0xBA, 0x5B, 0x26,  0x99, 0xC3, 0x27, 0x18,  0x6A, 0xF4, 0xE2, 0x3C,
        0x1A, 0x94, 0x68, 0x34,  0xB6, 0x15, 0x0B, 0xDA,  0x25, 0x83, 0xE9, 0xCA,  0x2A, 0xD4, 0x4C, 0xE8,
        0xDB, 0xBB, 0xC2, 0xDB,  0x04, 0xDE, 0x8E, 0xF9,  0x2E, 0x8E, 0xFC, 0x14,  0x1F, 0xBE, 0xCA, 0xA6,
        0x28, 0x7C, 0x59, 0x47,  0x4E, 0x6B, 0xC0, 0x5D,  0x99, 0xB2, 0x96, 0x4F,  0xA0, 0x90, 0xC3, 0xA2,
        0x23, 0x3B, 0xA1, 0x86,  0x51, 0x5B, 0xE7, 0xED,  0x1F, 0x61, 0x29, 0x70,  0xCE, 0xE2, 0xD7, 0xAF,
        0xB8, 0x1B, 0xDD, 0x76,  0x21, 0x70, 0x48, 0x1C,  0xD0, 0x06, 0x91, 0x27,  0xD5, 0xB0, 0x5A, 0xA9,
        0x93, 0xB4, 0xEA, 0x98,  0x8D, 0x8F, 0xDD, 0xC1,  0x86, 0xFF, 0xB7, 0xDC,  0x90, 0xA6, 0xC0, 0x8F,
        0x4D, 0xF4, 0x35, 0xC9,  0x34, 0x02, 0x84, 0x92,  0x36, 0xC3, 0xFA, 0xB4,  0xD2, 0x7C, 0x70, 0x26,
        0xC1, 0xD4, 0xDC, 0xB2,  0x60, 0x26, 0x46, 0xDE,  0xC9, 0x75, 0x1E, 0x76,  0x3D, 0xBA, 0x37, 0xBD,
        0xF8, 0xFF, 0x94, 0x06,  0xAD, 0x9E, 0x53, 0x0E,  0xE5, 0xDB, 0x38, 0x2F,  0x41, 0x30, 0x01, 0xAE,
        0xB0, 0x6A, 0x53, 0xED,  0x90, 0x27, 0xD8, 0x31,  0x17, 0x97, 0x27, 0xB0,  0x86, 0x5A, 0x89, 0x18,
        0xDA, 0x3E, 0xDB, 0xEB,  0xCF, 0x9B, 0x14, 0xED,  0x44, 0xCE, 0x6C, 0xBA,  0xCE, 0xD4, 0xBB, 0x1B,
        0xDB, 0x7F, 0x14, 0x47,  0xE6, 0xCC, 0x25, 0x4B,  0x33, 0x20, 0x51, 0x51,  0x2B, 0xD7, 0xAF, 0x42,
        0x6F, 0xB8, 0xF4, 0x01,  0x37, 0x8C, 0xD2, 0xBF,  0x59, 0x83, 0xCA, 0x01,  0xC6, 0x4B, 0x92, 0xEC,
        0xF0, 0x32, 0xEA, 0x15,  0xD1, 0x72, 0x1D, 0x03,  0xF4, 0x82, 0xD7, 0xCE,  0x6E, 0x74, 0xFE, 0xF6,
        0xD5, 0x5E, 0x70, 0x2F,  0x46, 0x98, 0x0C, 0x82,  0xB5, 0xA8, 0x40, 0x31,  0x90, 0x0B, 0x1C, 0x9E,
        0x59, 0xE7, 0xC9, 0x7F,  0xBE, 0xC7, 0xE8, 0xF3,  0x23, 0xA9, 0x7A, 0x7E,  0x36, 0xCC, 0x88, 0xBE,
        0x0F, 0x1D, 0x45, 0xB7,  0xFF, 0x58, 0x5A, 0xC5,  0x4B, 0xD4, 0x07, 0xB2,  0x2B, 0x41, 0x54, 0xAA,
        0xCC, 0x8F, 0x6D, 0x7E,  0xBF, 0x48, 0xE1, 0xD8,  0x14, 0xCC, 0x5E, 0xD2,  0x0F, 0x80, 0x37, 0xE0,
        0xA7, 0x97, 0x15, 0xEE,  0xF2, 0x9B, 0xE3, 0x28,  0x06, 0xA1, 0xD5, 0x8B,  0xB7, 0xC5, 0xDA, 0x76,
        0xF5, 0x50, 0xAA, 0x3D,  0x8A, 0x1F, 0xBF, 0xF0,  0xEB, 0x19, 0xCC, 0xB1,  0xA3, 0x13, 0xD5, 0x5C,
        0xDA, 0x56, 0xC9, 0xEC,  0x2E, 0xF2, 0x96, 0x32,  0x38, 0x7F, 0xE8, 0xD7,  0x6E, 0x3C, 0x04, 0x68,
        0x04, 0x3E, 0x8F, 0x66,  0x3F, 0x48, 0x60, 0xEE,  0x12, 0xBF, 0x2D, 0x5B,  0x0B, 0x74, 0x74, 0xD6,
        0xE6, 0x94, 0xF9, 0x1E,  0x6D, 0xBE, 0x11, 0x59,  0x74, 0xA3, 0x92, 0x6F,  0x12, 0xFE, 0xE5, 0xE4,
        0x38, 0x77, 0x7C, 0xB6,  0xA9, 0x32, 0xDF, 0x8C,  0xD8, 0xBE, 0xC4, 0xD0,  0x73, 0xB9, 0x31, 0xBA,
        0x3B, 0xC8, 0x32, 0xB6,  0x8D, 0x9D, 0xD3, 0x00,  0x74, 0x1F, 0xA7, 0xBF,  0x8A, 0xFC, 0x47, 0xED,
        0x25, 0x76, 0xF6, 0x93,  0x6B, 0xA4, 0x24, 0x66,  0x3A, 0xAB, 0x63, 0x9C,  0x5A, 0xE4, 0xF5, 0x68,
        0x34, 0x23, 0xB4, 0x74,  0x2B, 0xF1, 0xC9, 0x78,  0x23, 0x8F, 0x16, 0xCB,  0xE3, 0x9D, 0x65, 0x2D,
        0xE3, 0xFD, 0xB8, 0xBE,  0xFC, 0x84, 0x8A, 0xD9,  0x22, 0x22, 0x2E, 0x04,  0xA4, 0x03, 0x7C, 0x07,
        0x13, 0xEB, 0x57, 0xA8,  0x1A, 0x23, 0xF0, 0xC7,  0x34, 0x73, 0xFC, 0x64,  0x6C, 0xEA, 0x30, 0x6B,
        0x4B, 0xCB, 0xC8, 0x86,  0x2F, 0x83, 0x85, 0xDD,  0xFA, 0x9D, 0x4B, 0x7F,  0xA2, 0xC0, 0x87, 0xE8,
        0x79, 0x68, 0x33, 0x03,  0xED, 0x5B, 0xDD, 0x3A,  0x06, 0x2B, 0x3C, 0xF5,  0xB3, 0xA2, 0x78, 0xA6,
        0x6D, 0x2A, 0x13, 0xF8,  0x3F, 0x44, 0xF8, 0x2D,  0xDF, 0x31, 0x0E, 0xE0,  0x74, 0xAB, 0x6A, 0x36,
        0x45, 0x97, 0xE8, 0x99,  0xA0, 0x25, 0x5D, 0xC1,  0x64, 0xF3, 0x1C, 0xC5,  0x08, 0x46, 0x85, 0x1D,
        0xF9, 0xAB, 0x48, 0x19,  0x5D, 0xED, 0x7E, 0xA1,  0xB1, 0xD5, 0x10, 0xBD,  0x7E, 0xE7, 0x4D, 0x73,
        0xFA, 0xF3, 0x6B, 0xC3,  0x1E, 0xCF, 0xA2, 0x68,  0x35, 0x90, 0x46, 0xF4,  0xEB, 0x87, 0x9F, 0x92,
        0x40, 0x09, 0x43, 0x8B,  0x48, 0x1C, 0x6C, 0xD7,  0x88, 0x9A, 0x00, 0x2E,  0xD5, 0xEE, 0x38, 0x2B,
        0xC9, 0x19, 0x0D, 0xA6,  0xFC, 0x02, 0x6E, 0x47,  0x95, 0x58, 0xE4, 0x47,  0x56, 0x77, 0xE9, 0xAA,
        0x9E, 0x30, 0x50, 0xE2,  0x76, 0x56, 0x94, 0xDF,  0xC8, 0x1F, 0x56, 0xE8,  0x80, 0xB9, 0x6E, 0x71,
        0x60, 0xC9, 0x80, 0xDD,  0x98, 0xED, 0xD3, 0xDF,  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,
    },
    .g = { 19, }
};


#endif
